ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC_SAR_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ADC_SAR_1_initVar
  19              		.bss
  20              		.type	ADC_SAR_1_initVar, %object
  21              		.size	ADC_SAR_1_initVar, 1
  22              	ADC_SAR_1_initVar:
  23 0000 00       		.space	1
  24              		.comm	ADC_SAR_1_offset,2,2
  25              		.comm	ADC_SAR_1_countsPerVolt,2,2
  26              		.comm	ADC_SAR_1_countsPer10Volt,4,4
  27              		.comm	ADC_SAR_1_shift,2,2
  28              		.section	.text.ADC_SAR_1_Start,"ax",%progbits
  29              		.align	2
  30              		.global	ADC_SAR_1_Start
  31              		.thumb
  32              		.thumb_func
  33              		.type	ADC_SAR_1_Start, %function
  34              	ADC_SAR_1_Start:
  35              	.LFB0:
  36              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_SAR_1.c"
   1:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * File Name: ADC_SAR_1.c
   3:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
   5:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Description:
   6:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This file provides the source code to the API for the Successive
   7:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  approximation ADC Component.
   8:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
   9:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Note:
  10:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  11:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  18:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #include "ADC_SAR_1.h"
  20:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  21:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 2


  22:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #include "ADC_SAR_1_theACLK.h"
  23:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
  24:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  25:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  26:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  27:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Forward function references
  28:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  29:.\Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain(uint8 resolution);
  30:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  31:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  32:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  33:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global data allocation
  34:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  35:.\Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_initVar = 0u;
  36:.\Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_offset;
  37:.\Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_countsPerVolt;     /* Obsolete Gain compensation */
  38:.\Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int32 ADC_SAR_1_countsPer10Volt;   /* Gain compensation */
  39:.\Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_shift;
  40:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  41:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  42:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  43:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Start
  44:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  45:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  46:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  47:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This is the preferred method to begin component operation.
  48:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() sets the initVar variable, calls the
  49:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() function, and then calls the
  50:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Enable() function.
  51:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  52:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  53:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  54:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  55:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
  56:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  57:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  58:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
  59:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_initVar variable is used to indicate when/if initial
  60:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  configuration of this component has happened. The variable is initialized to
  61:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  64:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  If re-initialization of the component is required the variable should be set
  65:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  to zero before call of ADC_SAR_1_Start() routine, or the user may call
  66:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() and ADC_SAR_1_Enable() as done in the
  67:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  68:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  69:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effect:
  70:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  If the initVar variable is already set, this function only calls the
  71:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Enable() function.
  72:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  73:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  74:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Start(void)
  75:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
  37              		.loc 1 75 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 3


  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 80B5     		push	{r7, lr}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  76:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  77:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If not Initialized then initialize all required hardware and software */
  78:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_initVar == 0u)
  47              		.loc 1 78 0
  48 0004 054B     		ldr	r3, .L3
  49 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  50 0008 002B     		cmp	r3, #0
  51 000a 04D1     		bne	.L2
  79:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
  80:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_Init();
  52              		.loc 1 80 0
  53 000c FFF7FEFF 		bl	ADC_SAR_1_Init
  81:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_initVar = 1u;
  54              		.loc 1 81 0
  55 0010 024B     		ldr	r3, .L3
  56 0012 0122     		movs	r2, #1
  57 0014 1A70     		strb	r2, [r3]
  58              	.L2:
  82:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
  83:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_Enable();
  59              		.loc 1 83 0
  60 0016 FFF7FEFF 		bl	ADC_SAR_1_Enable
  84:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
  61              		.loc 1 84 0
  62 001a 80BD     		pop	{r7, pc}
  63              	.L4:
  64              		.align	2
  65              	.L3:
  66 001c 00000000 		.word	ADC_SAR_1_initVar
  67              		.cfi_endproc
  68              	.LFE0:
  69              		.size	ADC_SAR_1_Start, .-ADC_SAR_1_Start
  70              		.section	.text.ADC_SAR_1_Init,"ax",%progbits
  71              		.align	2
  72              		.global	ADC_SAR_1_Init
  73              		.thumb
  74              		.thumb_func
  75              		.type	ADC_SAR_1_Init, %function
  76              	ADC_SAR_1_Init:
  77              	.LFB1:
  85:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  86:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
  87:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  88:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Init
  89:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  90:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  91:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  92:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Initialize component's parameters to the parameters set by user in the
  93:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  customizer of the component placed onto schematic. Usually called in
  94:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start().
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 4


  95:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  96:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  97:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  98:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
  99:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 100:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 101:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 102:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
 103:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable is initialized to 0.
 104:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 105:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Init(void)
 107:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
  78              		.loc 1 107 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 80B5     		push	{r7, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 00AF     		add	r7, sp, #0
  87              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 109:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 110:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 111:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_theACLK_SetMode(CYCLK_DUTY);
  88              		.loc 1 111 0
  89 0004 1020     		movs	r0, #16
  90 0006 FFF7FEFF 		bl	ADC_SAR_1_theACLK_SetModeRegister
 112:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 113:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 114:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 115:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start and set interrupt vector */
 116:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntSetPriority(ADC_SAR_1_INTC_NUMBER, ADC_SAR_1_INTC_PRIOR_NUMBER);
  91              		.loc 1 116 0
  92 000a 0020     		movs	r0, #0
  93 000c 0721     		movs	r1, #7
  94 000e FFF7FEFF 		bl	CyIntSetPriority
 117:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         (void)CyIntSetVector(ADC_SAR_1_INTC_NUMBER, &ADC_SAR_1_ISR);
  95              		.loc 1 117 0
  96 0012 0020     		movs	r0, #0
  97 0014 0849     		ldr	r1, .L6
  98 0016 FFF7FEFF 		bl	CyIntSetVector
 118:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 119:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 120:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable IRQ mode*/
 121:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR1_REG |= ADC_SAR_1_SAR_IRQ_MASK_EN | ADC_SAR_1_SAR_IRQ_MODE_EDGE;
  99              		.loc 1 121 0
 100 001a 084A     		ldr	r2, .L6+4
 101 001c 074B     		ldr	r3, .L6+4
 102 001e 1B78     		ldrb	r3, [r3]
 103 0020 DBB2     		uxtb	r3, r3
 104 0022 43F00603 		orr	r3, r3, #6
 105 0026 DBB2     		uxtb	r3, r3
 106 0028 1370     		strb	r3, [r2]
 122:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 5


 123:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set SAR ADC resolution ADC */
 124:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SetResolution(ADC_SAR_1_DEFAULT_RESOLUTION);
 107              		.loc 1 124 0
 108 002a 0C20     		movs	r0, #12
 109 002c FFF7FEFF 		bl	ADC_SAR_1_SetResolution
 125:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = 0;
 110              		.loc 1 125 0
 111 0030 034B     		ldr	r3, .L6+8
 112 0032 0022     		movs	r2, #0
 113 0034 1A80     		strh	r2, [r3]	@ movhi
 126:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 114              		.loc 1 126 0
 115 0036 80BD     		pop	{r7, pc}
 116              	.L7:
 117              		.align	2
 118              	.L6:
 119 0038 00000000 		.word	ADC_SAR_1_ISR
 120 003c 09590040 		.word	1073764617
 121 0040 00000000 		.word	ADC_SAR_1_offset
 122              		.cfi_endproc
 123              	.LFE1:
 124              		.size	ADC_SAR_1_Init, .-ADC_SAR_1_Init
 125              		.section	.text.ADC_SAR_1_Enable,"ax",%progbits
 126              		.align	2
 127              		.global	ADC_SAR_1_Enable
 128              		.thumb
 129              		.thumb_func
 130              		.type	ADC_SAR_1_Enable, %function
 131              	ADC_SAR_1_Enable:
 132              	.LFB2:
 127:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 128:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 129:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 130:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Enable
 131:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 132:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 133:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 134:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Enables the reference, clock and power for SAR ADC.
 135:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 136:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 137:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 138:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 139:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 140:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 141:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 142:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Enable(void)
 144:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 133              		.loc 1 144 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 8
 136              		@ frame_needed = 1, uses_anonymous_args = 0
 137 0000 80B5     		push	{r7, lr}
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 7, -8
 140              		.cfi_offset 14, -4
 141 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 6


 142              		.cfi_def_cfa_offset 16
 143 0004 00AF     		add	r7, sp, #0
 144              		.cfi_def_cfa_register 7
 145:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 146:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 147:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 145              		.loc 1 147 0
 146 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 147 000a 0346     		mov	r3, r0
 148 000c FB71     		strb	r3, [r7, #7]
 148:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 149:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG |= ADC_SAR_1_ACT_PWR_SAR_EN;
 149              		.loc 1 150 0
 150 000e 2E4A     		ldr	r2, .L9
 151 0010 2D4B     		ldr	r3, .L9
 152 0012 1B78     		ldrb	r3, [r3]
 153 0014 DBB2     		uxtb	r3, r3
 154 0016 43F00203 		orr	r3, r3, #2
 155 001a DBB2     		uxtb	r3, r3
 156 001c 1370     		strb	r3, [r2]
 151:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 152:.\Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG |= ADC_SAR_1_STBY_PWR_SAR_EN;
 157              		.loc 1 153 0
 158 001e 2B4A     		ldr	r2, .L9+4
 159 0020 2A4B     		ldr	r3, .L9+4
 160 0022 1B78     		ldrb	r3, [r3]
 161 0024 DBB2     		uxtb	r3, r3
 162 0026 43F00203 		orr	r3, r3, #2
 163 002a DBB2     		uxtb	r3, r3
 164 002c 1370     		strb	r3, [r2]
 154:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 155:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 156:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 157:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG |= ADC_SAR_1_ACT_PWR_CLK_EN;
 165              		.loc 1 157 0
 166 002e 284A     		ldr	r2, .L9+8
 167 0030 274B     		ldr	r3, .L9+8
 168 0032 1B78     		ldrb	r3, [r3]
 169 0034 DBB2     		uxtb	r3, r3
 170 0036 43F00103 		orr	r3, r3, #1
 171 003a DBB2     		uxtb	r3, r3
 172 003c 1370     		strb	r3, [r2]
 158:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG |= ADC_SAR_1_STBY_PWR_CLK_EN;
 173              		.loc 1 158 0
 174 003e 254A     		ldr	r2, .L9+12
 175 0040 244B     		ldr	r3, .L9+12
 176 0042 1B78     		ldrb	r3, [r3]
 177 0044 DBB2     		uxtb	r3, r3
 178 0046 43F00103 		orr	r3, r3, #1
 179 004a DBB2     		uxtb	r3, r3
 180 004c 1370     		strb	r3, [r2]
 159:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 160:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 161:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR3_REG;
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 7


 181              		.loc 1 162 0
 182 004e 224B     		ldr	r3, .L9+16
 183 0050 1B78     		ldrb	r3, [r3]
 184 0052 BB71     		strb	r3, [r7, #6]
 163:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= ADC_SAR_1_SAR_EN_BUF_VCM_EN;
 185              		.loc 1 163 0
 186 0054 BB79     		ldrb	r3, [r7, #6]
 187 0056 43F00203 		orr	r3, r3, #2
 188 005a BB71     		strb	r3, [r7, #6]
 164:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if((ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF) || \
 166:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF))
 167:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg &= (uint8)~ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 168:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg |= ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 189              		.loc 1 169 0
 190 005c BB79     		ldrb	r3, [r7, #6]
 191 005e 43F00103 		orr	r3, r3, #1
 192 0062 BB71     		strb	r3, [r7, #6]
 170:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 171:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR3_REG = tmpReg;
 193              		.loc 1 171 0
 194 0064 1C4A     		ldr	r2, .L9+16
 195 0066 BB79     		ldrb	r3, [r7, #6]
 196 0068 1370     		strb	r3, [r2]
 172:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 173:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set reference for ADC */
 174:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF)
 175:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF)
 176:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 177:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_VDDA_VREF;           /* S7 */
 179:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 180:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else  /* Reference goes through internal buffer */
 181:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED)
 182:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_VREF;            /* S3 + S4 */
 197              		.loc 1 182 0
 198 006a 1C4B     		ldr	r3, .L9+20
 199 006c 1822     		movs	r2, #24
 200 006e 1A70     		strb	r2, [r3]
 183:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* INTREF Bypassed of External */
 184:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 185:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED */
 186:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* VNEG_VDDA_DIFF */
 187:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 188:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_DLY_INC;
 191:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_DLY_INC;
 201              		.loc 1 192 0
 202 0070 1B4A     		ldr	r2, .L9+24
 203 0072 1B4B     		ldr	r3, .L9+24
 204 0074 1B78     		ldrb	r3, [r3]
 205 0076 DBB2     		uxtb	r3, r3
 206 0078 43F04003 		orr	r3, r3, #64
 207 007c DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 8


 208 007e 1370     		strb	r3, [r2]
 193:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 194:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 195:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Increase comparator latch enable delay by 20%, 
 196:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Default for 1MSPS) 
 198:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 199:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
 201:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* for <500ksps */
 202:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
 209              		.loc 1 202 0
 210 0080 174A     		ldr	r2, .L9+24
 211 0082 174B     		ldr	r3, .L9+24
 212 0084 1B78     		ldrb	r3, [r3]
 213 0086 DBB2     		uxtb	r3, r3
 214 0088 23F00303 		bic	r3, r3, #3
 215 008c DBB2     		uxtb	r3, r3
 216 008e 1370     		strb	r3, [r2]
 203:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 204:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 205:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_1_DEFAULT_POWER << ADC_SAR_1_SAR_POWER_SHIFT)
 217              		.loc 1 206 0
 218 0090 144B     		ldr	r3, .L9+28
 219 0092 C822     		movs	r2, #200
 220 0094 1A70     		strb	r2, [r3]
 207:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_1_DEFAULT_REFERENCE != ADC_SAR_1__EXT_REF))
 209:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_HIZ_CLEAR
 210:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* SAR_HIZ_CLEAR */
 211:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set Convertion mode */
 212:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)      /* If triggered mode */
 213:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_MX_SOF_UDB           /* source: UDB */
 214:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_CONV_MODE */
 216:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ; /* end of multiple line initialization */
 217:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 218:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_TR0_REG = ADC_SAR_1_SAR_CAP_TRIM_2;
 221              		.loc 1 218 0
 222 0096 144B     		ldr	r3, .L9+32
 223 0098 0222     		movs	r2, #2
 224 009a 1A70     		strb	r2, [r3]
 219:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 220:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable clock for SAR ADC*/
 221:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CLK_REG |= ADC_SAR_1_SAR_MX_CLK_EN;
 225              		.loc 1 221 0
 226 009c 134A     		ldr	r2, .L9+36
 227 009e 134B     		ldr	r3, .L9+36
 228 00a0 1B78     		ldrb	r3, [r3]
 229 00a2 DBB2     		uxtb	r3, r3
 230 00a4 43F00803 		orr	r3, r3, #8
 231 00a8 DBB2     		uxtb	r3, r3
 232 00aa 1370     		strb	r3, [r2]
 222:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 223:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 233              		.loc 1 223 0
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 9


 234 00ac 0A20     		movs	r0, #10
 235 00ae FFF7FEFF 		bl	CyDelayUs
 224:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 225:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 226:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Clear a pending interrupt */
 227:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntClearPending(ADC_SAR_1_INTC_NUMBER);
 236              		.loc 1 227 0
 237 00b2 0F4B     		ldr	r3, .L9+40
 238 00b4 0122     		movs	r2, #1
 239 00b6 1A60     		str	r2, [r3]
 228:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 229:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 230:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 240              		.loc 1 230 0
 241 00b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 242 00ba 1846     		mov	r0, r3
 243 00bc FFF7FEFF 		bl	CyExitCriticalSection
 231:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 244              		.loc 1 231 0
 245 00c0 0837     		adds	r7, r7, #8
 246              		.cfi_def_cfa_offset 8
 247 00c2 BD46     		mov	sp, r7
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
 250 00c4 80BD     		pop	{r7, pc}
 251              	.L10:
 252 00c6 00BF     		.align	2
 253              	.L9:
 254 00c8 AB430040 		.word	1073759147
 255 00cc BB430040 		.word	1073759163
 256 00d0 A2430040 		.word	1073759138
 257 00d4 B2430040 		.word	1073759154
 258 00d8 0B590040 		.word	1073764619
 259 00dc 0E590040 		.word	1073764622
 260 00e0 0D590040 		.word	1073764621
 261 00e4 08590040 		.word	1073764616
 262 00e8 16460040 		.word	1073759766
 263 00ec 2F5B0040 		.word	1073765167
 264 00f0 80E200E0 		.word	-536812928
 265              		.cfi_endproc
 266              	.LFE2:
 267              		.size	ADC_SAR_1_Enable, .-ADC_SAR_1_Enable
 268              		.section	.text.ADC_SAR_1_Stop,"ax",%progbits
 269              		.align	2
 270              		.global	ADC_SAR_1_Stop
 271              		.thumb
 272              		.thumb_func
 273              		.type	ADC_SAR_1_Stop, %function
 274              	ADC_SAR_1_Stop:
 275              	.LFB3:
 232:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 233:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 234:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 235:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Stop
 236:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 237:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 238:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 10


 239:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 241:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 242:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 243:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 244:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 245:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 246:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 247:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 248:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Stop(void)
 249:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 276              		.loc 1 249 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 8
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 80B5     		push	{r7, lr}
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 7, -8
 283              		.cfi_offset 14, -4
 284 0002 82B0     		sub	sp, sp, #8
 285              		.cfi_def_cfa_offset 16
 286 0004 00AF     		add	r7, sp, #0
 287              		.cfi_def_cfa_register 7
 250:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 251:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 288              		.loc 1 251 0
 289 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 290 000a 0346     		mov	r3, r0
 291 000c FB71     		strb	r3, [r7, #7]
 252:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 253:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Stop all conversions */
 254:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 292              		.loc 1 254 0
 293 000e 174A     		ldr	r2, .L12
 294 0010 164B     		ldr	r3, .L12
 295 0012 1B78     		ldrb	r3, [r3]
 296 0014 DBB2     		uxtb	r3, r3
 297 0016 23F00103 		bic	r3, r3, #1
 298 001a DBB2     		uxtb	r3, r3
 299 001c 1370     		strb	r3, [r2]
 255:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_ACT_PWR_SAR_EN;
 300              		.loc 1 256 0
 301 001e 144A     		ldr	r2, .L12+4
 302 0020 134B     		ldr	r3, .L12+4
 303 0022 1B78     		ldrb	r3, [r3]
 304 0024 DBB2     		uxtb	r3, r3
 305 0026 23F00203 		bic	r3, r3, #2
 306 002a DBB2     		uxtb	r3, r3
 307 002c 1370     		strb	r3, [r2]
 257:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_STBY_PWR_SAR_EN;
 308              		.loc 1 258 0
 309 002e 114A     		ldr	r2, .L12+8
 310 0030 104B     		ldr	r3, .L12+8
 311 0032 1B78     		ldrb	r3, [r3]
 312 0034 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 11


 313 0036 23F00203 		bic	r3, r3, #2
 314 003a DBB2     		uxtb	r3, r3
 315 003c 1370     		strb	r3, [r2]
 259:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 260:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 261:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 262:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_ACT_PWR_CLK_EN;
 316              		.loc 1 262 0
 317 003e 0E4A     		ldr	r2, .L12+12
 318 0040 0D4B     		ldr	r3, .L12+12
 319 0042 1B78     		ldrb	r3, [r3]
 320 0044 DBB2     		uxtb	r3, r3
 321 0046 23F00103 		bic	r3, r3, #1
 322 004a DBB2     		uxtb	r3, r3
 323 004c 1370     		strb	r3, [r2]
 263:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_STBY_PWR_CLK_EN;
 324              		.loc 1 263 0
 325 004e 0B4A     		ldr	r2, .L12+16
 326 0050 0A4B     		ldr	r3, .L12+16
 327 0052 1B78     		ldrb	r3, [r3]
 328 0054 DBB2     		uxtb	r3, r3
 329 0056 23F00103 		bic	r3, r3, #1
 330 005a DBB2     		uxtb	r3, r3
 331 005c 1370     		strb	r3, [r2]
 264:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 265:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 266:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 332              		.loc 1 266 0
 333 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 334 0060 1846     		mov	r0, r3
 335 0062 FFF7FEFF 		bl	CyExitCriticalSection
 267:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 268:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 336              		.loc 1 268 0
 337 0066 0837     		adds	r7, r7, #8
 338              		.cfi_def_cfa_offset 8
 339 0068 BD46     		mov	sp, r7
 340              		.cfi_def_cfa_register 13
 341              		@ sp needed
 342 006a 80BD     		pop	{r7, pc}
 343              	.L13:
 344              		.align	2
 345              	.L12:
 346 006c 08590040 		.word	1073764616
 347 0070 AB430040 		.word	1073759147
 348 0074 BB430040 		.word	1073759163
 349 0078 A2430040 		.word	1073759138
 350 007c B2430040 		.word	1073759154
 351              		.cfi_endproc
 352              	.LFE3:
 353              		.size	ADC_SAR_1_Stop, .-ADC_SAR_1_Stop
 354              		.section	.text.ADC_SAR_1_SetPower,"ax",%progbits
 355              		.align	2
 356              		.global	ADC_SAR_1_SetPower
 357              		.thumb
 358              		.thumb_func
 359              		.type	ADC_SAR_1_SetPower, %function
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 12


 360              	ADC_SAR_1_SetPower:
 361              	.LFB4:
 269:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 270:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 271:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 272:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetPower
 273:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 274:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 275:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 276:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings with faster clock speeds.
 278:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 279:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 280:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  power:  Power setting for ADC
 281:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  0 ->    Normal
 282:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  1 ->    Medium power
 283:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  2 ->    1.25 power
 284:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  3 ->    Minimum power.
 285:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 286:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 287:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 288:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 289:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetPower(uint8 power)
 291:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 362              		.loc 1 291 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 16
 365              		@ frame_needed = 1, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 367 0000 80B4     		push	{r7}
 368              		.cfi_def_cfa_offset 4
 369              		.cfi_offset 7, -4
 370 0002 85B0     		sub	sp, sp, #20
 371              		.cfi_def_cfa_offset 24
 372 0004 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
 374 0006 0346     		mov	r3, r0
 375 0008 FB71     		strb	r3, [r7, #7]
 292:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 293:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 294:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* mask off invalid power settings */
 295:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     power &= ADC_SAR_1_SAR_API_POWER_MASK;
 376              		.loc 1 295 0
 377 000a FB79     		ldrb	r3, [r7, #7]
 378 000c 03F00303 		and	r3, r3, #3
 379 0010 FB71     		strb	r3, [r7, #7]
 296:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 297:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set Power parameter  */
 298:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR0_REG & (uint8)~ADC_SAR_1_SAR_POWER_MASK;
 380              		.loc 1 298 0
 381 0012 0A4B     		ldr	r3, .L15
 382 0014 1B78     		ldrb	r3, [r3]
 383 0016 DBB2     		uxtb	r3, r3
 384 0018 03F03F03 		and	r3, r3, #63
 385 001c FB73     		strb	r3, [r7, #15]
 299:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= (uint8)(power << ADC_SAR_1_SAR_POWER_SHIFT);
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 13


 386              		.loc 1 299 0
 387 001e FB79     		ldrb	r3, [r7, #7]
 388 0020 9B01     		lsls	r3, r3, #6
 389 0022 DAB2     		uxtb	r2, r3
 390 0024 FB7B     		ldrb	r3, [r7, #15]
 391 0026 1343     		orrs	r3, r3, r2
 392 0028 FB73     		strb	r3, [r7, #15]
 300:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = tmpReg;
 393              		.loc 1 300 0
 394 002a 044A     		ldr	r2, .L15
 395 002c FB7B     		ldrb	r3, [r7, #15]
 396 002e 1370     		strb	r3, [r2]
 301:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 397              		.loc 1 301 0
 398 0030 1437     		adds	r7, r7, #20
 399              		.cfi_def_cfa_offset 4
 400 0032 BD46     		mov	sp, r7
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 0034 5DF8047B 		ldr	r7, [sp], #4
 404              		.cfi_restore 7
 405              		.cfi_def_cfa_offset 0
 406 0038 7047     		bx	lr
 407              	.L16:
 408 003a 00BF     		.align	2
 409              	.L15:
 410 003c 08590040 		.word	1073764616
 411              		.cfi_endproc
 412              	.LFE4:
 413              		.size	ADC_SAR_1_SetPower, .-ADC_SAR_1_SetPower
 414              		.section	.text.ADC_SAR_1_SetResolution,"ax",%progbits
 415              		.align	2
 416              		.global	ADC_SAR_1_SetResolution
 417              		.thumb
 418              		.thumb_func
 419              		.type	ADC_SAR_1_SetResolution, %function
 420              	ADC_SAR_1_SetResolution:
 421              	.LFB5:
 302:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 303:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 304:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 305:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetResolution
 306:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 307:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 308:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 309:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the Relution of the SAR.
 310:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 311:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 312:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  resolution:
 313:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  12 ->    RES12
 314:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  10 ->    RES10
 315:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  8  ->    RES8
 316:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 317:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 318:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 319:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 320:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 14


 321:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  recommended best practice is to stop conversions with
 323:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversions with ADC_StartConvert().
 325:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you decide not to stop conversions before calling this API, you
 326:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  before changing the resolution.
 328:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  not be changed until the current conversion is complete. Data will not be
 330:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  clock cycles.
 332:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  You may need add a delay of this number of clock cycles after
 333:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SetResolution() is called before data is valid again.
 334:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  input range, and voltage reference.
 338:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 339:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 340:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetResolution(uint8 resolution)
 341:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 422              		.loc 1 341 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 16
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426 0000 80B5     		push	{r7, lr}
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 7, -8
 429              		.cfi_offset 14, -4
 430 0002 84B0     		sub	sp, sp, #16
 431              		.cfi_def_cfa_offset 24
 432 0004 00AF     		add	r7, sp, #0
 433              		.cfi_def_cfa_register 7
 434 0006 0346     		mov	r3, r0
 435 0008 FB71     		strb	r3, [r7, #7]
 342:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 343:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 344:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
 436              		.loc 1 345 0
 437 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 438 000c 0A2B     		cmp	r3, #10
 439 000e 07D0     		beq	.L19
 440 0010 0C2B     		cmp	r3, #12
 441 0012 02D0     		beq	.L20
 442 0014 082B     		cmp	r3, #8
 443 0016 06D0     		beq	.L21
 444 0018 08E0     		b	.L23
 445              	.L20:
 346:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 347:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 348:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 446              		.loc 1 348 0
 447 001a C223     		movs	r3, #194
 448 001c FB73     		strb	r3, [r7, #15]
 349:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 449              		.loc 1 349 0
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 15


 450 001e 0BE0     		b	.L22
 451              	.L19:
 350:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 351:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_10BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 452              		.loc 1 351 0
 453 0020 8223     		movs	r3, #130
 454 0022 FB73     		strb	r3, [r7, #15]
 352:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 455              		.loc 1 352 0
 456 0024 08E0     		b	.L22
 457              	.L21:
 353:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 354:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_8BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 458              		.loc 1 354 0
 459 0026 4223     		movs	r3, #66
 460 0028 FB73     		strb	r3, [r7, #15]
 355:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 461              		.loc 1 355 0
 462 002a 05E0     		b	.L22
 463              	.L23:
 356:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         default:
 357:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 464              		.loc 1 357 0
 465 002c C223     		movs	r3, #194
 466 002e FB73     		strb	r3, [r7, #15]
 358:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
 467              		.loc 1 359 0
 468 0030 0020     		movs	r0, #0
 469 0032 FFF7FEFF 		bl	CyHalt
 360:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 470              		.loc 1 360 0
 471 0036 00BF     		nop
 472              	.L22:
 361:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 362:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR2_REG = tmpReg;
 473              		.loc 1 362 0
 474 0038 044A     		ldr	r2, .L24
 475 003a FB7B     		ldrb	r3, [r7, #15]
 476 003c 1370     		strb	r3, [r2]
 363:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 364:.\Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Calculate gain for convert counts to volts */
 365:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_CalcGain(resolution);
 477              		.loc 1 365 0
 478 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 479 0040 1846     		mov	r0, r3
 480 0042 FFF7FEFF 		bl	ADC_SAR_1_CalcGain
 366:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 481              		.loc 1 366 0
 482 0046 1037     		adds	r7, r7, #16
 483              		.cfi_def_cfa_offset 8
 484 0048 BD46     		mov	sp, r7
 485              		.cfi_def_cfa_register 13
 486              		@ sp needed
 487 004a 80BD     		pop	{r7, pc}
 488              	.L25:
 489              		.align	2
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 16


 490              	.L24:
 491 004c 0A590040 		.word	1073764618
 492              		.cfi_endproc
 493              	.LFE5:
 494              		.size	ADC_SAR_1_SetResolution, .-ADC_SAR_1_SetResolution
 495              		.section	.text.ADC_SAR_1_StartConvert,"ax",%progbits
 496              		.align	2
 497              		.global	ADC_SAR_1_StartConvert
 498              		.thumb
 499              		.thumb_func
 500              		.type	ADC_SAR_1_StartConvert, %function
 501              	ADC_SAR_1_StartConvert:
 502              	.LFB6:
 367:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 368:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 369:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER)
 370:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 371:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 372:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StartConvert
 374:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 375:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 376:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 377:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  version of the SOC and every conversion must be triggered by
 380:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  ADC_SAR_1_StartConvert(). This function is not available when the
 381:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Hardware Trigger sample mode is selected.
 382:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 383:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 384:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 385:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 386:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 387:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 388:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 389:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 390:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 395:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
 396:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  external pin to the internal SOF generation. Application should not call
 398:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  StartConvert if external source used for SOF.
 399:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 400:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 401:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StartConvert(void)
 402:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 503              		.loc 1 402 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508 0000 80B4     		push	{r7}
 509              		.cfi_def_cfa_offset 4
 510              		.cfi_offset 7, -4
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 17


 511 0002 00AF     		add	r7, sp, #0
 512              		.cfi_def_cfa_register 7
 403:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 404:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 406:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 407:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start the conversion */
 408:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_SOF_START_CONV;
 513              		.loc 1 408 0
 514 0004 054A     		ldr	r2, .L27
 515 0006 054B     		ldr	r3, .L27
 516 0008 1B78     		ldrb	r3, [r3]
 517 000a DBB2     		uxtb	r3, r3
 518 000c 43F00103 		orr	r3, r3, #1
 519 0010 DBB2     		uxtb	r3, r3
 520 0012 1370     		strb	r3, [r2]
 409:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 521              		.loc 1 409 0
 522 0014 BD46     		mov	sp, r7
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 0016 5DF8047B 		ldr	r7, [sp], #4
 526              		.cfi_restore 7
 527              		.cfi_def_cfa_offset 0
 528 001a 7047     		bx	lr
 529              	.L28:
 530              		.align	2
 531              	.L27:
 532 001c 08590040 		.word	1073764616
 533              		.cfi_endproc
 534              	.LFE6:
 535              		.size	ADC_SAR_1_StartConvert, .-ADC_SAR_1_StartConvert
 536              		.section	.text.ADC_SAR_1_StopConvert,"ax",%progbits
 537              		.align	2
 538              		.global	ADC_SAR_1_StopConvert
 539              		.thumb
 540              		.thumb_func
 541              		.type	ADC_SAR_1_StopConvert, %function
 542              	ADC_SAR_1_StopConvert:
 543              	.LFB7:
 410:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 411:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 412:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 413:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StopConvert
 414:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 415:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 416:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 417:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 421:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 422:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 423:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 424:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 425:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 426:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 18


 427:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 428:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Stops ADC conversion in Free Running mode.
 429:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 430:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
 431:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 434:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 435:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StopConvert(void)
 436:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 544              		.loc 1 436 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548              		@ link register save eliminated.
 549 0000 80B4     		push	{r7}
 550              		.cfi_def_cfa_offset 4
 551              		.cfi_offset 7, -4
 552 0002 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 437:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Stop all conversions */
 438:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 554              		.loc 1 438 0
 555 0004 054A     		ldr	r2, .L30
 556 0006 054B     		ldr	r3, .L30
 557 0008 1B78     		ldrb	r3, [r3]
 558 000a DBB2     		uxtb	r3, r3
 559 000c 23F00103 		bic	r3, r3, #1
 560 0010 DBB2     		uxtb	r3, r3
 561 0012 1370     		strb	r3, [r2]
 439:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 440:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 441:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Return source to UDB for hardware SOF signal */
 442:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_MX_SOF_UDB;    /* source: UDB */
 443:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 444:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 445:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 562              		.loc 1 445 0
 563 0014 BD46     		mov	sp, r7
 564              		.cfi_def_cfa_register 13
 565              		@ sp needed
 566 0016 5DF8047B 		ldr	r7, [sp], #4
 567              		.cfi_restore 7
 568              		.cfi_def_cfa_offset 0
 569 001a 7047     		bx	lr
 570              	.L31:
 571              		.align	2
 572              	.L30:
 573 001c 08590040 		.word	1073764616
 574              		.cfi_endproc
 575              	.LFE7:
 576              		.size	ADC_SAR_1_StopConvert, .-ADC_SAR_1_StopConvert
 577              		.section	.text.ADC_SAR_1_IsEndConversion,"ax",%progbits
 578              		.align	2
 579              		.global	ADC_SAR_1_IsEndConversion
 580              		.thumb
 581              		.thumb_func
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 19


 582              		.type	ADC_SAR_1_IsEndConversion, %function
 583              	ADC_SAR_1_IsEndConversion:
 584              	.LFB8:
 446:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 447:.\Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER */
 448:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 449:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 450:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 451:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_IsEndConversion
 452:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 453:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 454:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 455:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Immediately returns the status of the conversion or does not return
 456:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  parameter.
 458:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 459:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 460:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  retMode:  Check conversion return mode.
 461:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *   ADC_SAR_1_RETURN_STATUS: Immediately returns the status. If the
 462:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *     value returned is zero, the conversion is not complete, and this function
 463:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *     should be retried until a nonzero result is returned.
 464:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *   ADC_SAR_1_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *     conversion is complete.
 466:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 467:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 468:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *           1 =>  The last conversion is complete.
 470:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 471:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 472:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 474:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 475:.\Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_IsEndConversion(uint8 retMode)
 476:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 585              		.loc 1 476 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 16
 588              		@ frame_needed = 1, uses_anonymous_args = 0
 589 0000 80B5     		push	{r7, lr}
 590              		.cfi_def_cfa_offset 8
 591              		.cfi_offset 7, -8
 592              		.cfi_offset 14, -4
 593 0002 84B0     		sub	sp, sp, #16
 594              		.cfi_def_cfa_offset 24
 595 0004 00AF     		add	r7, sp, #0
 596              		.cfi_def_cfa_register 7
 597 0006 0346     		mov	r3, r0
 598 0008 FB71     		strb	r3, [r7, #7]
 599              	.L34:
 477:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 status;
 478:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 479:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     do
 480:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 481:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         status = ADC_SAR_1_SAR_CSR1_REG & ADC_SAR_1_SAR_EOF_1;
 600              		.loc 1 481 0 discriminator 2
 601 000a 0C4B     		ldr	r3, .L37
 602 000c 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 20


 603 000e DBB2     		uxtb	r3, r3
 604 0010 03F00103 		and	r3, r3, #1
 605 0014 FB73     		strb	r3, [r7, #15]
 482:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     } while ((status != ADC_SAR_1_SAR_EOF_1) && (retMode == ADC_SAR_1_WAIT_FOR_RESULT));
 606              		.loc 1 482 0 discriminator 2
 607 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 608 0018 012B     		cmp	r3, #1
 609 001a 02D0     		beq	.L33
 610              		.loc 1 482 0 is_stmt 0 discriminator 1
 611 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612 001e 002B     		cmp	r3, #0
 613 0020 F3D0     		beq	.L34
 614              	.L33:
 483:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 484:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     if(status == ADC_SAR_1_SAR_EOF_1)
 615              		.loc 1 484 0 is_stmt 1
 616 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 617 0024 012B     		cmp	r3, #1
 618 0026 04D1     		bne	.L35
 485:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 486:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CyDelayUs(1u);
 619              		.loc 1 487 0
 620 0028 0120     		movs	r0, #1
 621 002a FFF7FEFF 		bl	CyDelayUs
 488:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         CY_GET_REG8(ADC_SAR_1_SAR_CSR1_PTR);
 622              		.loc 1 489 0
 623 002e 034B     		ldr	r3, .L37
 624 0030 1B78     		ldrb	r3, [r3]
 625              	.L35:
 490:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 491:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 492:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return(status);
 626              		.loc 1 492 0
 627 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 493:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 628              		.loc 1 493 0
 629 0034 1846     		mov	r0, r3
 630 0036 1037     		adds	r7, r7, #16
 631              		.cfi_def_cfa_offset 8
 632 0038 BD46     		mov	sp, r7
 633              		.cfi_def_cfa_register 13
 634              		@ sp needed
 635 003a 80BD     		pop	{r7, pc}
 636              	.L38:
 637              		.align	2
 638              	.L37:
 639 003c 09590040 		.word	1073764617
 640              		.cfi_endproc
 641              	.LFE8:
 642              		.size	ADC_SAR_1_IsEndConversion, .-ADC_SAR_1_IsEndConversion
 643              		.section	.text.ADC_SAR_1_GetResult8,"ax",%progbits
 644              		.align	2
 645              		.global	ADC_SAR_1_GetResult8
 646              		.thumb
 647              		.thumb_func
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 21


 648              		.type	ADC_SAR_1_GetResult8, %function
 649              	ADC_SAR_1_GetResult8:
 650              	.LFB9:
 494:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 495:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 496:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 497:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult8
 498:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 499:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 500:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 501:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  than 8 bits, the function returns the LSB of the result.
 503:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 504:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready.
 505:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 506:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 507:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 508:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 509:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 510:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The LSB of the last ADC conversion.
 511:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 512:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 513:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2s
 514:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
 515:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 516:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 517:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC counts to the 2s complement form.
 518:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 519:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 520:.\Generated_Source\PSoC5/ADC_SAR_1.c **** int8 ADC_SAR_1_GetResult8( void )
 521:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 651              		.loc 1 521 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 1, uses_anonymous_args = 0
 655              		@ link register save eliminated.
 656 0000 80B4     		push	{r7}
 657              		.cfi_def_cfa_offset 4
 658              		.cfi_offset 7, -4
 659 0002 00AF     		add	r7, sp, #0
 660              		.cfi_def_cfa_register 7
 522:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int8)ADC_SAR_1_SAR_WRK0_REG - (int8)ADC_SAR_1_shift);
 661              		.loc 1 522 0
 662 0004 074B     		ldr	r3, .L41
 663 0006 1B78     		ldrb	r3, [r3]
 664 0008 DAB2     		uxtb	r2, r3
 665 000a 074B     		ldr	r3, .L41+4
 666 000c 1B88     		ldrh	r3, [r3]	@ movhi
 667 000e 9BB2     		uxth	r3, r3
 668 0010 DBB2     		uxtb	r3, r3
 669 0012 D31A     		subs	r3, r2, r3
 670 0014 DBB2     		uxtb	r3, r3
 671 0016 DBB2     		uxtb	r3, r3
 672 0018 5BB2     		sxtb	r3, r3
 523:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 673              		.loc 1 523 0
 674 001a 1846     		mov	r0, r3
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 22


 675 001c BD46     		mov	sp, r7
 676              		.cfi_def_cfa_register 13
 677              		@ sp needed
 678 001e 5DF8047B 		ldr	r7, [sp], #4
 679              		.cfi_restore 7
 680              		.cfi_def_cfa_offset 0
 681 0022 7047     		bx	lr
 682              	.L42:
 683              		.align	2
 684              	.L41:
 685 0024 A25B0040 		.word	1073765282
 686 0028 00000000 		.word	ADC_SAR_1_shift
 687              		.cfi_endproc
 688              	.LFE9:
 689              		.size	ADC_SAR_1_GetResult8, .-ADC_SAR_1_GetResult8
 690              		.section	.text.ADC_SAR_1_GetResult16,"ax",%progbits
 691              		.align	2
 692              		.global	ADC_SAR_1_GetResult16
 693              		.thumb
 694              		.thumb_func
 695              		.type	ADC_SAR_1_GetResult16, %function
 696              	ADC_SAR_1_GetResult16:
 697              	.LFB10:
 524:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 525:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 526:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 527:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult16
 528:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 529:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 530:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 531:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  of 8 to 12 bits.
 533:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 534:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready
 535:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 536:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 537:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 538:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 539:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 540:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The 16-bit result of the last ADC conversion
 541:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 542:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 543:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2s
 544:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
 545:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 546:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 547:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC counts to the 2s complement form.
 548:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 549:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 550:.\Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_GetResult16( void )
 551:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 698              		.loc 1 551 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 8
 701              		@ frame_needed = 1, uses_anonymous_args = 0
 702              		@ link register save eliminated.
 703 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 23


 704              		.cfi_def_cfa_offset 4
 705              		.cfi_offset 7, -4
 706 0002 83B0     		sub	sp, sp, #12
 707              		.cfi_def_cfa_offset 16
 708 0004 00AF     		add	r7, sp, #0
 709              		.cfi_def_cfa_register 7
 552:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uint16 res;
 553:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 554:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     res = CY_GET_REG16(ADC_SAR_1_SAR_WRK_PTR);
 710              		.loc 1 554 0
 711 0006 094B     		ldr	r3, .L45
 712 0008 1B88     		ldrh	r3, [r3]	@ movhi
 713 000a FB80     		strh	r3, [r7, #6]	@ movhi
 555:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 556:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int16)res - ADC_SAR_1_shift );
 714              		.loc 1 556 0
 715 000c 084B     		ldr	r3, .L45+4
 716 000e 1B88     		ldrh	r3, [r3]	@ movhi
 717 0010 9BB2     		uxth	r3, r3
 718 0012 9BB2     		uxth	r3, r3
 719 0014 FA88     		ldrh	r2, [r7, #6]	@ movhi
 720 0016 D31A     		subs	r3, r2, r3
 721 0018 9BB2     		uxth	r3, r3
 722 001a 9BB2     		uxth	r3, r3
 723 001c 1BB2     		sxth	r3, r3
 557:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 724              		.loc 1 557 0
 725 001e 1846     		mov	r0, r3
 726 0020 0C37     		adds	r7, r7, #12
 727              		.cfi_def_cfa_offset 4
 728 0022 BD46     		mov	sp, r7
 729              		.cfi_def_cfa_register 13
 730              		@ sp needed
 731 0024 5DF8047B 		ldr	r7, [sp], #4
 732              		.cfi_restore 7
 733              		.cfi_def_cfa_offset 0
 734 0028 7047     		bx	lr
 735              	.L46:
 736 002a 00BF     		.align	2
 737              	.L45:
 738 002c A25B0040 		.word	1073765282
 739 0030 00000000 		.word	ADC_SAR_1_shift
 740              		.cfi_endproc
 741              	.LFE10:
 742              		.size	ADC_SAR_1_GetResult16, .-ADC_SAR_1_GetResult16
 743              		.section	.text.ADC_SAR_1_SetOffset,"ax",%progbits
 744              		.align	2
 745              		.global	ADC_SAR_1_SetOffset
 746              		.thumb
 747              		.thumb_func
 748              		.type	ADC_SAR_1_SetOffset, %function
 749              	ADC_SAR_1_SetOffset:
 750              	.LFB11:
 558:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 559:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 560:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 561:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetOffset
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 24


 562:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 563:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 564:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 565:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC offset, which is used by ADC_SAR_1_CountsTo_Volts(),
 566:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts(), and ADC_SAR_1_CountsTo_uVolts()
 567:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversion.
 569:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 570:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 571:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:.\Generated_Source\PSoC5/ADC_SAR_1.c ****    the same input voltage.
 573:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 574:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 575:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 576:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 577:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 578:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable modified. This variable is used for
 579:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  offset calibration purpose.
 580:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects the ADC_SAR_1_CountsTo_Volts,
 581:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts, ADC_SAR_1_CountsTo_uVolts functions
 582:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  by subtracting the given offset.
 583:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 584:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetOffset(int16 offset)
 586:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 751              		.loc 1 586 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 8
 754              		@ frame_needed = 1, uses_anonymous_args = 0
 755              		@ link register save eliminated.
 756 0000 80B4     		push	{r7}
 757              		.cfi_def_cfa_offset 4
 758              		.cfi_offset 7, -4
 759 0002 83B0     		sub	sp, sp, #12
 760              		.cfi_def_cfa_offset 16
 761 0004 00AF     		add	r7, sp, #0
 762              		.cfi_def_cfa_register 7
 763 0006 0346     		mov	r3, r0
 764 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = offset;
 765              		.loc 1 587 0
 766 000a 044A     		ldr	r2, .L48
 767 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 768 000e 1380     		strh	r3, [r2]	@ movhi
 588:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 769              		.loc 1 588 0
 770 0010 0C37     		adds	r7, r7, #12
 771              		.cfi_def_cfa_offset 4
 772 0012 BD46     		mov	sp, r7
 773              		.cfi_def_cfa_register 13
 774              		@ sp needed
 775 0014 5DF8047B 		ldr	r7, [sp], #4
 776              		.cfi_restore 7
 777              		.cfi_def_cfa_offset 0
 778 0018 7047     		bx	lr
 779              	.L49:
 780 001a 00BF     		.align	2
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 25


 781              	.L48:
 782 001c 00000000 		.word	ADC_SAR_1_offset
 783              		.cfi_endproc
 784              	.LFE11:
 785              		.size	ADC_SAR_1_SetOffset, .-ADC_SAR_1_SetOffset
 786              		.section	.text.ADC_SAR_1_CalcGain,"ax",%progbits
 787              		.align	2
 788              		.thumb
 789              		.thumb_func
 790              		.type	ADC_SAR_1_CalcGain, %function
 791              	ADC_SAR_1_CalcGain:
 792              	.LFB12:
 589:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 590:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 591:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 592:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CalcGain
 593:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 594:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 595:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 596:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 598:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 599:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  uint8: resolution
 600:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 601:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 602:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 603:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 604:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 605:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift variable initialized. This variable is used to
 606:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  convert the ADC counts to the 2s compliment form.
 607:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable initialized. This variable is used
 608:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 609:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 610:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 611:.\Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain( uint8 resolution )
 612:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 793              		.loc 1 612 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 16
 796              		@ frame_needed = 1, uses_anonymous_args = 0
 797 0000 80B5     		push	{r7, lr}
 798              		.cfi_def_cfa_offset 8
 799              		.cfi_offset 7, -8
 800              		.cfi_offset 14, -4
 801 0002 84B0     		sub	sp, sp, #16
 802              		.cfi_def_cfa_offset 24
 803 0004 00AF     		add	r7, sp, #0
 804              		.cfi_def_cfa_register 7
 805 0006 0346     		mov	r3, r0
 806 0008 FB71     		strb	r3, [r7, #7]
 613:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 counts;
 614:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 615:.\Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 616:.\Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 617:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         uint16 diff_zero;
 618:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 619:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 26


 620:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
 807              		.loc 1 620 0
 808 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 809 000c 0A2B     		cmp	r3, #10
 810 000e 08D0     		beq	.L52
 811 0010 0C2B     		cmp	r3, #12
 812 0012 02D0     		beq	.L53
 813 0014 082B     		cmp	r3, #8
 814 0016 08D0     		beq	.L54
 815 0018 0BE0     		b	.L56
 816              	.L53:
 621:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 622:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 623:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_12BIT;
 817              		.loc 1 623 0
 818 001a 4FF48053 		mov	r3, #4096
 819 001e FB60     		str	r3, [r7, #12]
 624:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 625:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 626:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 627:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT;
 628:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 629:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 820              		.loc 1 629 0
 821 0020 0DE0     		b	.L55
 822              	.L52:
 630:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 631:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_10BIT;
 823              		.loc 1 631 0
 824 0022 4FF48063 		mov	r3, #1024
 825 0026 FB60     		str	r3, [r7, #12]
 632:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 633:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 634:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 635:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 2u;
 636:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 637:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 826              		.loc 1 637 0
 827 0028 09E0     		b	.L55
 828              	.L54:
 638:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 639:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_8BIT;
 829              		.loc 1 639 0
 830 002a 4FF48073 		mov	r3, #256
 831 002e FB60     		str	r3, [r7, #12]
 640:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 641:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 642:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 643:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 4u;
 644:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 645:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 832              		.loc 1 645 0
 833 0030 05E0     		b	.L55
 834              	.L56:
 646:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = 0;
 835              		.loc 1 647 0
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 27


 836 0032 0023     		movs	r3, #0
 837 0034 FB60     		str	r3, [r7, #12]
 648:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 649:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 650:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 651:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = 0u;
 652:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 653:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
 838              		.loc 1 653 0
 839 0036 0020     		movs	r0, #0
 840 0038 FFF7FEFF 		bl	CyHalt
 654:.\Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 841              		.loc 1 654 0
 842 003c 00BF     		nop
 843              	.L55:
 655:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 656:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPerVolt = 0; /* Clear obsolete variable */
 844              		.loc 1 656 0
 845 003e 0C4B     		ldr	r3, .L57
 846 0040 0022     		movs	r2, #0
 847 0042 1A80     		strh	r2, [r3]	@ movhi
 657:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (((counts * ADC_SAR_1_10MV_COUNTS) +
 848              		.loc 1 658 0
 849 0044 FB68     		ldr	r3, [r7, #12]
 850 0046 42F21072 		movw	r2, #10000
 851 004a 02FB03F3 		mul	r3, r2, r3
 852 004e 03F59C53 		add	r3, r3, #4992
 853 0052 0833     		adds	r3, r3, #8
 659:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                         ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV * 2))
 854              		.loc 1 659 0
 855 0054 074A     		ldr	r2, .L57+4
 856 0056 82FB0312 		smull	r1, r2, r2, r3
 857 005a 1213     		asrs	r2, r2, #12
 858 005c DB17     		asrs	r3, r3, #31
 859 005e D31A     		subs	r3, r2, r3
 658:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                         ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV * 2))
 860              		.loc 1 658 0
 861 0060 054A     		ldr	r2, .L57+8
 862 0062 1360     		str	r3, [r2]
 660:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 661:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #if( (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 662:.\Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 663:.\Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC) )
 664:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = 0;
 863              		.loc 1 664 0
 864 0064 054B     		ldr	r3, .L57+12
 865 0066 0022     		movs	r2, #0
 866 0068 1A80     		strh	r2, [r3]	@ movhi
 665:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #else
 666:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = diff_zero;
 667:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 668:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 867              		.loc 1 668 0
 868 006a 1037     		adds	r7, r7, #16
 869              		.cfi_def_cfa_offset 8
 870 006c BD46     		mov	sp, r7
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 28


 871              		.cfi_def_cfa_register 13
 872              		@ sp needed
 873 006e 80BD     		pop	{r7, pc}
 874              	.L58:
 875              		.align	2
 876              	.L57:
 877 0070 00000000 		.word	ADC_SAR_1_countsPerVolt
 878 0074 AD8BDB68 		.word	1759218605
 879 0078 00000000 		.word	ADC_SAR_1_countsPer10Volt
 880 007c 00000000 		.word	ADC_SAR_1_shift
 881              		.cfi_endproc
 882              	.LFE12:
 883              		.size	ADC_SAR_1_CalcGain, .-ADC_SAR_1_CalcGain
 884              		.section	.text.ADC_SAR_1_SetGain,"ax",%progbits
 885              		.align	2
 886              		.global	ADC_SAR_1_SetGain
 887              		.thumb
 888              		.thumb_func
 889              		.type	ADC_SAR_1_SetGain, %function
 890              	ADC_SAR_1_SetGain:
 891              	.LFB13:
 669:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 670:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 671:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetGain
 673:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 675:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 676:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  that follow. This value is set by default by the reference and input range
 678:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  input or if the ADC is using an external reference.
 680:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 681:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 682:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcGain counts per volt
 683:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 684:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 685:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 686:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 687:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 688:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable modified. This variable is used
 689:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 690:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 691:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 692:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetGain(int16 adcGain)
 693:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 892              		.loc 1 693 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 8
 895              		@ frame_needed = 1, uses_anonymous_args = 0
 896              		@ link register save eliminated.
 897 0000 80B4     		push	{r7}
 898              		.cfi_def_cfa_offset 4
 899              		.cfi_offset 7, -4
 900 0002 83B0     		sub	sp, sp, #12
 901              		.cfi_def_cfa_offset 16
 902 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 29


 903              		.cfi_def_cfa_register 7
 904 0006 0346     		mov	r3, r0
 905 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 694:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (int32)adcGain * 10;
 906              		.loc 1 694 0
 907 000a B7F90620 		ldrsh	r2, [r7, #6]
 908 000e 1346     		mov	r3, r2
 909 0010 9B00     		lsls	r3, r3, #2
 910 0012 1344     		add	r3, r3, r2
 911 0014 5B00     		lsls	r3, r3, #1
 912 0016 1A46     		mov	r2, r3
 913 0018 034B     		ldr	r3, .L60
 914 001a 1A60     		str	r2, [r3]
 695:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 915              		.loc 1 695 0
 916 001c 0C37     		adds	r7, r7, #12
 917              		.cfi_def_cfa_offset 4
 918 001e BD46     		mov	sp, r7
 919              		.cfi_def_cfa_register 13
 920              		@ sp needed
 921 0020 5DF8047B 		ldr	r7, [sp], #4
 922              		.cfi_restore 7
 923              		.cfi_def_cfa_offset 0
 924 0024 7047     		bx	lr
 925              	.L61:
 926 0026 00BF     		.align	2
 927              	.L60:
 928 0028 00000000 		.word	ADC_SAR_1_countsPer10Volt
 929              		.cfi_endproc
 930              	.LFE13:
 931              		.size	ADC_SAR_1_SetGain, .-ADC_SAR_1_SetGain
 932              		.section	.text.ADC_SAR_1_SetScaledGain,"ax",%progbits
 933              		.align	2
 934              		.global	ADC_SAR_1_SetScaledGain
 935              		.thumb
 936              		.thumb_func
 937              		.type	ADC_SAR_1_SetScaledGain, %function
 938              	ADC_SAR_1_SetScaledGain:
 939              	.LFB14:
 696:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 697:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 698:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetScaledGain
 700:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 701:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 702:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 703:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  that follow. This value is set by default by the reference and input range
 705:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  input or if the ADC is using an external reference.
 707:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 708:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 709:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32 adcGain  counts per 10 volt
 710:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 711:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 712:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 713:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 30


 714:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 715:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable modified. This variable is used
 716:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 717:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 718:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 719:.\Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetScaledGain(int32 adcGain)
 720:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 940              		.loc 1 720 0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 8
 943              		@ frame_needed = 1, uses_anonymous_args = 0
 944              		@ link register save eliminated.
 945 0000 80B4     		push	{r7}
 946              		.cfi_def_cfa_offset 4
 947              		.cfi_offset 7, -4
 948 0002 83B0     		sub	sp, sp, #12
 949              		.cfi_def_cfa_offset 16
 950 0004 00AF     		add	r7, sp, #0
 951              		.cfi_def_cfa_register 7
 952 0006 7860     		str	r0, [r7, #4]
 721:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = adcGain;
 953              		.loc 1 721 0
 954 0008 034A     		ldr	r2, .L63
 955 000a 7B68     		ldr	r3, [r7, #4]
 956 000c 1360     		str	r3, [r2]
 722:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 957              		.loc 1 722 0
 958 000e 0C37     		adds	r7, r7, #12
 959              		.cfi_def_cfa_offset 4
 960 0010 BD46     		mov	sp, r7
 961              		.cfi_def_cfa_register 13
 962              		@ sp needed
 963 0012 5DF8047B 		ldr	r7, [sp], #4
 964              		.cfi_restore 7
 965              		.cfi_def_cfa_offset 0
 966 0016 7047     		bx	lr
 967              	.L64:
 968              		.align	2
 969              	.L63:
 970 0018 00000000 		.word	ADC_SAR_1_countsPer10Volt
 971              		.cfi_endproc
 972              	.LFE14:
 973              		.size	ADC_SAR_1_SetScaledGain, .-ADC_SAR_1_SetScaledGain
 974              		.section	.text.ADC_SAR_1_CountsTo_mVolts,"ax",%progbits
 975              		.align	2
 976              		.global	ADC_SAR_1_CountsTo_mVolts
 977              		.thumb
 978              		.thumb_func
 979              		.type	ADC_SAR_1_CountsTo_mVolts, %function
 980              	ADC_SAR_1_CountsTo_mVolts:
 981              	.LFB15:
 723:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 724:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 725:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 726:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_mVolts
 727:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 728:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 31


 729:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 730:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 732:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 733:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 735:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 736:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 Result in mVolts
 737:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 738:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 739:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 740:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable used.
 741:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 742:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 743:.\Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_CountsTo_mVolts(int16 adcCounts)
 744:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 982              		.loc 1 744 0
 983              		.cfi_startproc
 984              		@ args = 0, pretend = 0, frame = 16
 985              		@ frame_needed = 1, uses_anonymous_args = 0
 986              		@ link register save eliminated.
 987 0000 80B4     		push	{r7}
 988              		.cfi_def_cfa_offset 4
 989              		.cfi_offset 7, -4
 990 0002 85B0     		sub	sp, sp, #20
 991              		.cfi_def_cfa_offset 24
 992 0004 00AF     		add	r7, sp, #0
 993              		.cfi_def_cfa_register 7
 994 0006 0346     		mov	r3, r0
 995 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 745:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int16 mVolts;
 746:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 747:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 748:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 996              		.loc 1 748 0
 997 000a 1D4B     		ldr	r3, .L71
 998 000c 1B88     		ldrh	r3, [r3]	@ movhi
 999 000e 9BB2     		uxth	r3, r3
 1000 0010 002B     		cmp	r3, #0
 1001 0012 09D0     		beq	.L66
 749:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 750:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 1002              		.loc 1 750 0
 1003 0014 1A4B     		ldr	r3, .L71
 1004 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1005 0018 9BB2     		uxth	r3, r3
 1006 001a 1AB2     		sxth	r2, r3
 1007 001c 1346     		mov	r3, r2
 1008 001e 9B00     		lsls	r3, r3, #2
 1009 0020 1344     		add	r3, r3, r2
 1010 0022 5B00     		lsls	r3, r3, #1
 1011 0024 FB60     		str	r3, [r7, #12]
 1012 0026 02E0     		b	.L67
 1013              	.L66:
 751:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 752:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 753:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 32


 754:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 1014              		.loc 1 754 0
 1015 0028 164B     		ldr	r3, .L71+4
 1016 002a 1B68     		ldr	r3, [r3]
 1017 002c FB60     		str	r3, [r7, #12]
 1018              	.L67:
 755:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 756:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 757:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 758:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 1019              		.loc 1 758 0
 1020 002e 164B     		ldr	r3, .L71+8
 1021 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1022 0032 9BB2     		uxth	r3, r3
 1023 0034 FA88     		ldrh	r2, [r7, #6]
 1024 0036 9BB2     		uxth	r3, r3
 1025 0038 D31A     		subs	r3, r2, r3
 1026 003a 9BB2     		uxth	r3, r3
 1027 003c FB80     		strh	r3, [r7, #6]	@ movhi
 759:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Convert to millivolts with rounding */
 760:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_1_10MV_COUNTS ) + ( (adcCounts > 0) ?
 1028              		.loc 1 760 0
 1029 003e B7F90630 		ldrsh	r3, [r7, #6]
 1030 0042 42F21072 		movw	r2, #10000
 1031 0046 02FB03F2 		mul	r2, r2, r3
 761:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1032              		.loc 1 761 0
 1033 004a B7F90630 		ldrsh	r3, [r7, #6]
 1034 004e 002B     		cmp	r3, #0
 1035 0050 04DD     		ble	.L68
 1036              		.loc 1 761 0 is_stmt 0 discriminator 1
 1037 0052 FB68     		ldr	r3, [r7, #12]
 1038 0054 D90F     		lsrs	r1, r3, #31
 1039 0056 0B44     		add	r3, r3, r1
 1040 0058 5B10     		asrs	r3, r3, #1
 1041 005a 04E0     		b	.L69
 1042              	.L68:
 1043              		.loc 1 761 0 discriminator 2
 1044 005c FB68     		ldr	r3, [r7, #12]
 1045 005e D90F     		lsrs	r1, r3, #31
 1046 0060 0B44     		add	r3, r3, r1
 1047 0062 5B10     		asrs	r3, r3, #1
 1048 0064 5B42     		negs	r3, r3
 1049              	.L69:
 760:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1050              		.loc 1 760 0 is_stmt 1
 1051 0066 1A44     		add	r2, r2, r3
 1052              		.loc 1 761 0
 1053 0068 FB68     		ldr	r3, [r7, #12]
 1054 006a 92FBF3F3 		sdiv	r3, r2, r3
 760:.\Generated_Source\PSoC5/ADC_SAR_1.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1055              		.loc 1 760 0
 1056 006e 7B81     		strh	r3, [r7, #10]	@ movhi
 762:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 763:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( mVolts );
 1057              		.loc 1 763 0
 1058 0070 7B89     		ldrh	r3, [r7, #10]
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 33


 1059 0072 1BB2     		sxth	r3, r3
 764:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 1060              		.loc 1 764 0
 1061 0074 1846     		mov	r0, r3
 1062 0076 1437     		adds	r7, r7, #20
 1063              		.cfi_def_cfa_offset 4
 1064 0078 BD46     		mov	sp, r7
 1065              		.cfi_def_cfa_register 13
 1066              		@ sp needed
 1067 007a 5DF8047B 		ldr	r7, [sp], #4
 1068              		.cfi_restore 7
 1069              		.cfi_def_cfa_offset 0
 1070 007e 7047     		bx	lr
 1071              	.L72:
 1072              		.align	2
 1073              	.L71:
 1074 0080 00000000 		.word	ADC_SAR_1_countsPerVolt
 1075 0084 00000000 		.word	ADC_SAR_1_countsPer10Volt
 1076 0088 00000000 		.word	ADC_SAR_1_offset
 1077              		.cfi_endproc
 1078              	.LFE15:
 1079              		.size	ADC_SAR_1_CountsTo_mVolts, .-ADC_SAR_1_CountsTo_mVolts
 1080              		.global	__aeabi_ldivmod
 1081              		.section	.text.ADC_SAR_1_CountsTo_uVolts,"ax",%progbits
 1082              		.align	2
 1083              		.global	ADC_SAR_1_CountsTo_uVolts
 1084              		.thumb
 1085              		.thumb_func
 1086              		.type	ADC_SAR_1_CountsTo_uVolts, %function
 1087              	ADC_SAR_1_CountsTo_uVolts:
 1088              	.LFB16:
 765:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 766:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 767:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 768:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_uVolts
 769:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 770:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 771:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 772:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 774:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 775:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts: Result from the ADC conversion
 776:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 777:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 778:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32 Result in micro Volts
 779:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 780:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 781:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 782:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt used to convert ADC counts to uVolts.
 783:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 784:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 785:.\Generated_Source\PSoC5/ADC_SAR_1.c **** int32 ADC_SAR_1_CountsTo_uVolts(int16 adcCounts)
 786:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 1089              		.loc 1 786 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 24
 1092              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 34


 1093 0000 B0B5     		push	{r4, r5, r7, lr}
 1094              		.cfi_def_cfa_offset 16
 1095              		.cfi_offset 4, -16
 1096              		.cfi_offset 5, -12
 1097              		.cfi_offset 7, -8
 1098              		.cfi_offset 14, -4
 1099 0002 86B0     		sub	sp, sp, #24
 1100              		.cfi_def_cfa_offset 40
 1101 0004 00AF     		add	r7, sp, #0
 1102              		.cfi_def_cfa_register 7
 1103 0006 0346     		mov	r3, r0
 1104 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 787:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 788:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int64 uVolts;
 789:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 790:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 791:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 1105              		.loc 1 791 0
 1106 000a 1E4B     		ldr	r3, .L77
 1107 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1108 000e 9BB2     		uxth	r3, r3
 1109 0010 002B     		cmp	r3, #0
 1110 0012 09D0     		beq	.L74
 792:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 793:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 1111              		.loc 1 793 0
 1112 0014 1B4B     		ldr	r3, .L77
 1113 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1114 0018 9BB2     		uxth	r3, r3
 1115 001a 1AB2     		sxth	r2, r3
 1116 001c 1346     		mov	r3, r2
 1117 001e 9B00     		lsls	r3, r3, #2
 1118 0020 1344     		add	r3, r3, r2
 1119 0022 5B00     		lsls	r3, r3, #1
 1120 0024 7B61     		str	r3, [r7, #20]
 1121 0026 02E0     		b	.L75
 1122              	.L74:
 794:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 795:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 796:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 797:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 1123              		.loc 1 797 0
 1124 0028 174B     		ldr	r3, .L77+4
 1125 002a 1B68     		ldr	r3, [r3]
 1126 002c 7B61     		str	r3, [r7, #20]
 1127              	.L75:
 798:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 799:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 800:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 801:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 1128              		.loc 1 801 0
 1129 002e 174B     		ldr	r3, .L77+8
 1130 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1131 0032 9BB2     		uxth	r3, r3
 1132 0034 FA88     		ldrh	r2, [r7, #6]
 1133 0036 9BB2     		uxth	r3, r3
 1134 0038 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 35


 1135 003a 9BB2     		uxth	r3, r3
 1136 003c FB80     		strh	r3, [r7, #6]	@ movhi
 802:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 805:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_1_10UV_COUNTS ) / countsPer10Volt);
 1137              		.loc 1 805 0
 1138 003e B7F90620 		ldrsh	r2, [r7, #6]
 1139 0042 4FEAE273 		asr	r3, r2, #31
 1140 0046 1249     		ldr	r1, .L77+12
 1141 0048 01FB03F0 		mul	r0, r1, r3
 1142 004c 0021     		movs	r1, #0
 1143 004e 01FB02F1 		mul	r1, r1, r2
 1144 0052 0144     		add	r1, r1, r0
 1145 0054 0E48     		ldr	r0, .L77+12
 1146 0056 A2FB0023 		umull	r2, r3, r2, r0
 1147 005a 1944     		add	r1, r1, r3
 1148 005c 0B46     		mov	r3, r1
 1149 005e 7969     		ldr	r1, [r7, #20]
 1150 0060 0C46     		mov	r4, r1
 1151 0062 4FEAE475 		asr	r5, r4, #31
 1152 0066 1046     		mov	r0, r2
 1153 0068 1946     		mov	r1, r3
 1154 006a 2246     		mov	r2, r4
 1155 006c 2B46     		mov	r3, r5
 1156 006e FFF7FEFF 		bl	__aeabi_ldivmod
 1157 0072 0246     		mov	r2, r0
 1158 0074 0B46     		mov	r3, r1
 1159 0076 C7E90223 		strd	r2, [r7, #8]
 806:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 807:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( uVolts );
 1160              		.loc 1 807 0
 1161 007a BB68     		ldr	r3, [r7, #8]
 808:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
 1162              		.loc 1 808 0
 1163 007c 1846     		mov	r0, r3
 1164 007e 1837     		adds	r7, r7, #24
 1165              		.cfi_def_cfa_offset 16
 1166 0080 BD46     		mov	sp, r7
 1167              		.cfi_def_cfa_register 13
 1168              		@ sp needed
 1169 0082 B0BD     		pop	{r4, r5, r7, pc}
 1170              	.L78:
 1171              		.align	2
 1172              	.L77:
 1173 0084 00000000 		.word	ADC_SAR_1_countsPerVolt
 1174 0088 00000000 		.word	ADC_SAR_1_countsPer10Volt
 1175 008c 00000000 		.word	ADC_SAR_1_offset
 1176 0090 80969800 		.word	10000000
 1177              		.cfi_endproc
 1178              	.LFE16:
 1179              		.size	ADC_SAR_1_CountsTo_uVolts, .-ADC_SAR_1_CountsTo_uVolts
 1180              		.global	__aeabi_i2f
 1181              		.global	__aeabi_fmul
 1182              		.global	__aeabi_fdiv
 1183              		.section	.text.ADC_SAR_1_CountsTo_Volts,"ax",%progbits
 1184              		.align	2
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 36


 1185              		.global	ADC_SAR_1_CountsTo_Volts
 1186              		.thumb
 1187              		.thumb_func
 1188              		.type	ADC_SAR_1_CountsTo_Volts, %function
 1189              	ADC_SAR_1_CountsTo_Volts:
 1190              	.LFB17:
 809:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 810:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 811:.\Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 812:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_Volts
 813:.\Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 814:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 815:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 816:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to volts as a floating-point number.
 817:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 818:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 819:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts: Result from the ADC conversion
 820:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 821:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 822:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  float Result in Volts
 823:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 824:.\Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 825:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 826:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt used to convert ADC counts to Volts.
 827:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *
 828:.\Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC5/ADC_SAR_1.c **** float32 ADC_SAR_1_CountsTo_Volts(int16 adcCounts)
 830:.\Generated_Source\PSoC5/ADC_SAR_1.c **** {
 1191              		.loc 1 830 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 16
 1194              		@ frame_needed = 1, uses_anonymous_args = 0
 1195 0000 90B5     		push	{r4, r7, lr}
 1196              		.cfi_def_cfa_offset 12
 1197              		.cfi_offset 4, -12
 1198              		.cfi_offset 7, -8
 1199              		.cfi_offset 14, -4
 1200 0002 85B0     		sub	sp, sp, #20
 1201              		.cfi_def_cfa_offset 32
 1202 0004 00AF     		add	r7, sp, #0
 1203              		.cfi_def_cfa_register 7
 1204 0006 0346     		mov	r3, r0
 1205 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 831:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     float32 volts;
 832:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 833:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 834:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 1206              		.loc 1 834 0
 1207 000a 1A4B     		ldr	r3, .L83
 1208 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1209 000e 9BB2     		uxth	r3, r3
 1210 0010 002B     		cmp	r3, #0
 1211 0012 09D0     		beq	.L80
 835:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 836:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 1212              		.loc 1 836 0
 1213 0014 174B     		ldr	r3, .L83
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 37


 1214 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1215 0018 9BB2     		uxth	r3, r3
 1216 001a 1AB2     		sxth	r2, r3
 1217 001c 1346     		mov	r3, r2
 1218 001e 9B00     		lsls	r3, r3, #2
 1219 0020 1344     		add	r3, r3, r2
 1220 0022 5B00     		lsls	r3, r3, #1
 1221 0024 FB60     		str	r3, [r7, #12]
 1222 0026 02E0     		b	.L81
 1223              	.L80:
 837:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 838:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 839:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 840:.\Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 1224              		.loc 1 840 0
 1225 0028 134B     		ldr	r3, .L83+4
 1226 002a 1B68     		ldr	r3, [r3]
 1227 002c FB60     		str	r3, [r7, #12]
 1228              	.L81:
 841:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 842:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 843:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 844:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 1229              		.loc 1 844 0
 1230 002e 134B     		ldr	r3, .L83+8
 1231 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1232 0032 9BB2     		uxth	r3, r3
 1233 0034 FA88     		ldrh	r2, [r7, #6]
 1234 0036 9BB2     		uxth	r3, r3
 1235 0038 D31A     		subs	r3, r2, r3
 1236 003a 9BB2     		uxth	r3, r3
 1237 003c FB80     		strh	r3, [r7, #6]	@ movhi
 845:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 846:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     volts = ((float32)adcCounts * ADC_SAR_1_10V_COUNTS) / (float32)countsPer10Volt;
 1238              		.loc 1 846 0
 1239 003e B7F90630 		ldrsh	r3, [r7, #6]
 1240 0042 1846     		mov	r0, r3
 1241 0044 FFF7FEFF 		bl	__aeabi_i2f
 1242 0048 0346     		mov	r3, r0
 1243 004a 1846     		mov	r0, r3
 1244 004c 0C49     		ldr	r1, .L83+12
 1245 004e FFF7FEFF 		bl	__aeabi_fmul
 1246 0052 0346     		mov	r3, r0
 1247 0054 1C46     		mov	r4, r3
 1248 0056 F868     		ldr	r0, [r7, #12]
 1249 0058 FFF7FEFF 		bl	__aeabi_i2f
 1250 005c 0346     		mov	r3, r0
 1251 005e 2046     		mov	r0, r4
 1252 0060 1946     		mov	r1, r3
 1253 0062 FFF7FEFF 		bl	__aeabi_fdiv
 1254 0066 0346     		mov	r3, r0
 1255 0068 BB60     		str	r3, [r7, #8]	@ float
 847:.\Generated_Source\PSoC5/ADC_SAR_1.c **** 
 848:.\Generated_Source\PSoC5/ADC_SAR_1.c ****     return( volts );
 1256              		.loc 1 848 0
 1257 006a BB68     		ldr	r3, [r7, #8]	@ float
 849:.\Generated_Source\PSoC5/ADC_SAR_1.c **** }
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 38


 1258              		.loc 1 849 0
 1259 006c 1846     		mov	r0, r3
 1260 006e 1437     		adds	r7, r7, #20
 1261              		.cfi_def_cfa_offset 12
 1262 0070 BD46     		mov	sp, r7
 1263              		.cfi_def_cfa_register 13
 1264              		@ sp needed
 1265 0072 90BD     		pop	{r4, r7, pc}
 1266              	.L84:
 1267              		.align	2
 1268              	.L83:
 1269 0074 00000000 		.word	ADC_SAR_1_countsPerVolt
 1270 0078 00000000 		.word	ADC_SAR_1_countsPer10Volt
 1271 007c 00000000 		.word	ADC_SAR_1_offset
 1272 0080 00002041 		.word	1092616192
 1273              		.cfi_endproc
 1274              	.LFE17:
 1275              		.size	ADC_SAR_1_CountsTo_Volts, .-ADC_SAR_1_CountsTo_Volts
 1276              		.text
 1277              	.Letext0:
 1278              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1279              		.section	.debug_info,"",%progbits
 1280              	.Ldebug_info0:
 1281 0000 74040000 		.4byte	0x474
 1282 0004 0400     		.2byte	0x4
 1283 0006 00000000 		.4byte	.Ldebug_abbrev0
 1284 000a 04       		.byte	0x4
 1285 000b 01       		.uleb128 0x1
 1286 000c D3010000 		.4byte	.LASF59
 1287 0010 01       		.byte	0x1
 1288 0011 36000000 		.4byte	.LASF60
 1289 0015 99010000 		.4byte	.LASF61
 1290 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1291 001d 00000000 		.4byte	0
 1292 0021 00000000 		.4byte	.Ldebug_line0
 1293 0025 02       		.uleb128 0x2
 1294 0026 04       		.byte	0x4
 1295 0027 05       		.byte	0x5
 1296 0028 696E7400 		.ascii	"int\000"
 1297 002c 03       		.uleb128 0x3
 1298 002d 04       		.byte	0x4
 1299 002e 07       		.byte	0x7
 1300 002f DE000000 		.4byte	.LASF0
 1301 0033 03       		.uleb128 0x3
 1302 0034 01       		.byte	0x1
 1303 0035 06       		.byte	0x6
 1304 0036 80000000 		.4byte	.LASF1
 1305 003a 03       		.uleb128 0x3
 1306 003b 01       		.byte	0x1
 1307 003c 08       		.byte	0x8
 1308 003d AE020000 		.4byte	.LASF2
 1309 0041 03       		.uleb128 0x3
 1310 0042 02       		.byte	0x2
 1311 0043 05       		.byte	0x5
 1312 0044 D6020000 		.4byte	.LASF3
 1313 0048 03       		.uleb128 0x3
 1314 0049 02       		.byte	0x2
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 39


 1315 004a 07       		.byte	0x7
 1316 004b 0A010000 		.4byte	.LASF4
 1317 004f 03       		.uleb128 0x3
 1318 0050 04       		.byte	0x4
 1319 0051 05       		.byte	0x5
 1320 0052 92000000 		.4byte	.LASF5
 1321 0056 03       		.uleb128 0x3
 1322 0057 04       		.byte	0x4
 1323 0058 07       		.byte	0x7
 1324 0059 F2000000 		.4byte	.LASF6
 1325 005d 03       		.uleb128 0x3
 1326 005e 08       		.byte	0x8
 1327 005f 05       		.byte	0x5
 1328 0060 72000000 		.4byte	.LASF7
 1329 0064 03       		.uleb128 0x3
 1330 0065 08       		.byte	0x8
 1331 0066 07       		.byte	0x7
 1332 0067 5B000000 		.4byte	.LASF8
 1333 006b 03       		.uleb128 0x3
 1334 006c 04       		.byte	0x4
 1335 006d 07       		.byte	0x7
 1336 006e 5E010000 		.4byte	.LASF9
 1337 0072 03       		.uleb128 0x3
 1338 0073 01       		.byte	0x1
 1339 0074 08       		.byte	0x8
 1340 0075 32030000 		.4byte	.LASF10
 1341 0079 04       		.uleb128 0x4
 1342 007a B2000000 		.4byte	.LASF11
 1343 007e 02       		.byte	0x2
 1344 007f 9201     		.2byte	0x192
 1345 0081 3A000000 		.4byte	0x3a
 1346 0085 04       		.uleb128 0x4
 1347 0086 00000000 		.4byte	.LASF12
 1348 008a 02       		.byte	0x2
 1349 008b 9301     		.2byte	0x193
 1350 008d 48000000 		.4byte	0x48
 1351 0091 04       		.uleb128 0x4
 1352 0092 BF000000 		.4byte	.LASF13
 1353 0096 02       		.byte	0x2
 1354 0097 9401     		.2byte	0x194
 1355 0099 56000000 		.4byte	0x56
 1356 009d 04       		.uleb128 0x4
 1357 009e 2C010000 		.4byte	.LASF14
 1358 00a2 02       		.byte	0x2
 1359 00a3 9501     		.2byte	0x195
 1360 00a5 33000000 		.4byte	0x33
 1361 00a9 04       		.uleb128 0x4
 1362 00aa CE030000 		.4byte	.LASF15
 1363 00ae 02       		.byte	0x2
 1364 00af 9601     		.2byte	0x196
 1365 00b1 41000000 		.4byte	0x41
 1366 00b5 04       		.uleb128 0x4
 1367 00b6 8C000000 		.4byte	.LASF16
 1368 00ba 02       		.byte	0x2
 1369 00bb 9701     		.2byte	0x197
 1370 00bd 4F000000 		.4byte	0x4f
 1371 00c1 04       		.uleb128 0x4
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 40


 1372 00c2 56010000 		.4byte	.LASF17
 1373 00c6 02       		.byte	0x2
 1374 00c7 9801     		.2byte	0x198
 1375 00c9 CD000000 		.4byte	0xcd
 1376 00cd 03       		.uleb128 0x3
 1377 00ce 04       		.byte	0x4
 1378 00cf 04       		.byte	0x4
 1379 00d0 8B020000 		.4byte	.LASF18
 1380 00d4 03       		.uleb128 0x3
 1381 00d5 08       		.byte	0x8
 1382 00d6 04       		.byte	0x4
 1383 00d7 B8000000 		.4byte	.LASF19
 1384 00db 04       		.uleb128 0x4
 1385 00dc 71020000 		.4byte	.LASF20
 1386 00e0 02       		.byte	0x2
 1387 00e1 9D01     		.2byte	0x19d
 1388 00e3 5D000000 		.4byte	0x5d
 1389 00e7 04       		.uleb128 0x4
 1390 00e8 A9020000 		.4byte	.LASF21
 1391 00ec 02       		.byte	0x2
 1392 00ed 3C02     		.2byte	0x23c
 1393 00ef F3000000 		.4byte	0xf3
 1394 00f3 05       		.uleb128 0x5
 1395 00f4 79000000 		.4byte	0x79
 1396 00f8 04       		.uleb128 0x4
 1397 00f9 AC000000 		.4byte	.LASF22
 1398 00fd 02       		.byte	0x2
 1399 00fe 3D02     		.2byte	0x23d
 1400 0100 04010000 		.4byte	0x104
 1401 0104 05       		.uleb128 0x5
 1402 0105 85000000 		.4byte	0x85
 1403 0109 04       		.uleb128 0x4
 1404 010a 38010000 		.4byte	.LASF23
 1405 010e 02       		.byte	0x2
 1406 010f 3E02     		.2byte	0x23e
 1407 0111 15010000 		.4byte	0x115
 1408 0115 05       		.uleb128 0x5
 1409 0116 91000000 		.4byte	0x91
 1410 011a 06       		.uleb128 0x6
 1411 011b 61020000 		.4byte	.LASF24
 1412 011f 01       		.byte	0x1
 1413 0120 4A       		.byte	0x4a
 1414 0121 00000000 		.4byte	.LFB0
 1415 0125 20000000 		.4byte	.LFE0-.LFB0
 1416 0129 01       		.uleb128 0x1
 1417 012a 9C       		.byte	0x9c
 1418 012b 06       		.uleb128 0x6
 1419 012c 1D010000 		.4byte	.LASF25
 1420 0130 01       		.byte	0x1
 1421 0131 6A       		.byte	0x6a
 1422 0132 00000000 		.4byte	.LFB1
 1423 0136 44000000 		.4byte	.LFE1-.LFB1
 1424 013a 01       		.uleb128 0x1
 1425 013b 9C       		.byte	0x9c
 1426 013c 07       		.uleb128 0x7
 1427 013d E8020000 		.4byte	.LASF28
 1428 0141 01       		.byte	0x1
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 41


 1429 0142 8F       		.byte	0x8f
 1430 0143 00000000 		.4byte	.LFB2
 1431 0147 F4000000 		.4byte	.LFE2-.LFB2
 1432 014b 01       		.uleb128 0x1
 1433 014c 9C       		.byte	0x9c
 1434 014d 6E010000 		.4byte	0x16e
 1435 0151 08       		.uleb128 0x8
 1436 0152 05040000 		.4byte	.LASF26
 1437 0156 01       		.byte	0x1
 1438 0157 91       		.byte	0x91
 1439 0158 79000000 		.4byte	0x79
 1440 015c 02       		.uleb128 0x2
 1441 015d 91       		.byte	0x91
 1442 015e 76       		.sleb128 -10
 1443 015f 08       		.uleb128 0x8
 1444 0160 77030000 		.4byte	.LASF27
 1445 0164 01       		.byte	0x1
 1446 0165 92       		.byte	0x92
 1447 0166 79000000 		.4byte	0x79
 1448 016a 02       		.uleb128 0x2
 1449 016b 91       		.byte	0x91
 1450 016c 77       		.sleb128 -9
 1451 016d 00       		.byte	0
 1452 016e 07       		.uleb128 0x7
 1453 016f 1C040000 		.4byte	.LASF29
 1454 0173 01       		.byte	0x1
 1455 0174 F8       		.byte	0xf8
 1456 0175 00000000 		.4byte	.LFB3
 1457 0179 80000000 		.4byte	.LFE3-.LFB3
 1458 017d 01       		.uleb128 0x1
 1459 017e 9C       		.byte	0x9c
 1460 017f 92010000 		.4byte	0x192
 1461 0183 08       		.uleb128 0x8
 1462 0184 77030000 		.4byte	.LASF27
 1463 0188 01       		.byte	0x1
 1464 0189 FA       		.byte	0xfa
 1465 018a 79000000 		.4byte	0x79
 1466 018e 02       		.uleb128 0x2
 1467 018f 91       		.byte	0x91
 1468 0190 77       		.sleb128 -9
 1469 0191 00       		.byte	0
 1470 0192 09       		.uleb128 0x9
 1471 0193 A9030000 		.4byte	.LASF30
 1472 0197 01       		.byte	0x1
 1473 0198 2201     		.2byte	0x122
 1474 019a 00000000 		.4byte	.LFB4
 1475 019e 40000000 		.4byte	.LFE4-.LFB4
 1476 01a2 01       		.uleb128 0x1
 1477 01a3 9C       		.byte	0x9c
 1478 01a4 C7010000 		.4byte	0x1c7
 1479 01a8 0A       		.uleb128 0xa
 1480 01a9 A3020000 		.4byte	.LASF32
 1481 01ad 01       		.byte	0x1
 1482 01ae 2201     		.2byte	0x122
 1483 01b0 79000000 		.4byte	0x79
 1484 01b4 02       		.uleb128 0x2
 1485 01b5 91       		.byte	0x91
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 42


 1486 01b6 6F       		.sleb128 -17
 1487 01b7 0B       		.uleb128 0xb
 1488 01b8 05040000 		.4byte	.LASF26
 1489 01bc 01       		.byte	0x1
 1490 01bd 2401     		.2byte	0x124
 1491 01bf 79000000 		.4byte	0x79
 1492 01c3 02       		.uleb128 0x2
 1493 01c4 91       		.byte	0x91
 1494 01c5 77       		.sleb128 -9
 1495 01c6 00       		.byte	0
 1496 01c7 0C       		.uleb128 0xc
 1497 01c8 67010000 		.4byte	.LASF31
 1498 01cc 01       		.byte	0x1
 1499 01cd 5401     		.2byte	0x154
 1500 01cf 00000000 		.4byte	.LFB5
 1501 01d3 50000000 		.4byte	.LFE5-.LFB5
 1502 01d7 01       		.uleb128 0x1
 1503 01d8 9C       		.byte	0x9c
 1504 01d9 FC010000 		.4byte	0x1fc
 1505 01dd 0A       		.uleb128 0xa
 1506 01de 27030000 		.4byte	.LASF33
 1507 01e2 01       		.byte	0x1
 1508 01e3 5401     		.2byte	0x154
 1509 01e5 79000000 		.4byte	0x79
 1510 01e9 02       		.uleb128 0x2
 1511 01ea 91       		.byte	0x91
 1512 01eb 6F       		.sleb128 -17
 1513 01ec 0B       		.uleb128 0xb
 1514 01ed 05040000 		.4byte	.LASF26
 1515 01f1 01       		.byte	0x1
 1516 01f2 5601     		.2byte	0x156
 1517 01f4 79000000 		.4byte	0x79
 1518 01f8 02       		.uleb128 0x2
 1519 01f9 91       		.byte	0x91
 1520 01fa 77       		.sleb128 -9
 1521 01fb 00       		.byte	0
 1522 01fc 0D       		.uleb128 0xd
 1523 01fd EE030000 		.4byte	.LASF34
 1524 0201 01       		.byte	0x1
 1525 0202 9101     		.2byte	0x191
 1526 0204 00000000 		.4byte	.LFB6
 1527 0208 20000000 		.4byte	.LFE6-.LFB6
 1528 020c 01       		.uleb128 0x1
 1529 020d 9C       		.byte	0x9c
 1530 020e 0D       		.uleb128 0xd
 1531 020f 57030000 		.4byte	.LASF35
 1532 0213 01       		.byte	0x1
 1533 0214 B301     		.2byte	0x1b3
 1534 0216 00000000 		.4byte	.LFB7
 1535 021a 20000000 		.4byte	.LFE7-.LFB7
 1536 021e 01       		.uleb128 0x1
 1537 021f 9C       		.byte	0x9c
 1538 0220 0E       		.uleb128 0xe
 1539 0221 8F030000 		.4byte	.LASF38
 1540 0225 01       		.byte	0x1
 1541 0226 DB01     		.2byte	0x1db
 1542 0228 79000000 		.4byte	0x79
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 43


 1543 022c 00000000 		.4byte	.LFB8
 1544 0230 40000000 		.4byte	.LFE8-.LFB8
 1545 0234 01       		.uleb128 0x1
 1546 0235 9C       		.byte	0x9c
 1547 0236 59020000 		.4byte	0x259
 1548 023a 0A       		.uleb128 0xa
 1549 023b D6000000 		.4byte	.LASF36
 1550 023f 01       		.byte	0x1
 1551 0240 DB01     		.2byte	0x1db
 1552 0242 79000000 		.4byte	0x79
 1553 0246 02       		.uleb128 0x2
 1554 0247 91       		.byte	0x91
 1555 0248 6F       		.sleb128 -17
 1556 0249 0B       		.uleb128 0xb
 1557 024a 88030000 		.4byte	.LASF37
 1558 024e 01       		.byte	0x1
 1559 024f DD01     		.2byte	0x1dd
 1560 0251 79000000 		.4byte	0x79
 1561 0255 02       		.uleb128 0x2
 1562 0256 91       		.byte	0x91
 1563 0257 77       		.sleb128 -9
 1564 0258 00       		.byte	0
 1565 0259 0F       		.uleb128 0xf
 1566 025a 07000000 		.4byte	.LASF62
 1567 025e 01       		.byte	0x1
 1568 025f 0802     		.2byte	0x208
 1569 0261 9D000000 		.4byte	0x9d
 1570 0265 00000000 		.4byte	.LFB9
 1571 0269 2C000000 		.4byte	.LFE9-.LFB9
 1572 026d 01       		.uleb128 0x1
 1573 026e 9C       		.byte	0x9c
 1574 026f 10       		.uleb128 0x10
 1575 0270 11030000 		.4byte	.LASF39
 1576 0274 01       		.byte	0x1
 1577 0275 2602     		.2byte	0x226
 1578 0277 A9000000 		.4byte	0xa9
 1579 027b 00000000 		.4byte	.LFB10
 1580 027f 34000000 		.4byte	.LFE10-.LFB10
 1581 0283 01       		.uleb128 0x1
 1582 0284 9C       		.byte	0x9c
 1583 0285 99020000 		.4byte	0x299
 1584 0289 11       		.uleb128 0x11
 1585 028a 72657300 		.ascii	"res\000"
 1586 028e 01       		.byte	0x1
 1587 028f 2802     		.2byte	0x228
 1588 0291 85000000 		.4byte	0x85
 1589 0295 02       		.uleb128 0x2
 1590 0296 91       		.byte	0x91
 1591 0297 76       		.sleb128 -10
 1592 0298 00       		.byte	0
 1593 0299 09       		.uleb128 0x9
 1594 029a 77020000 		.4byte	.LASF40
 1595 029e 01       		.byte	0x1
 1596 029f 4902     		.2byte	0x249
 1597 02a1 00000000 		.4byte	.LFB11
 1598 02a5 20000000 		.4byte	.LFE11-.LFB11
 1599 02a9 01       		.uleb128 0x1
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 44


 1600 02aa 9C       		.byte	0x9c
 1601 02ab BF020000 		.4byte	0x2bf
 1602 02af 0A       		.uleb128 0xa
 1603 02b0 50030000 		.4byte	.LASF41
 1604 02b4 01       		.byte	0x1
 1605 02b5 4902     		.2byte	0x249
 1606 02b7 A9000000 		.4byte	0xa9
 1607 02bb 02       		.uleb128 0x2
 1608 02bc 91       		.byte	0x91
 1609 02bd 76       		.sleb128 -10
 1610 02be 00       		.byte	0
 1611 02bf 12       		.uleb128 0x12
 1612 02c0 23000000 		.4byte	.LASF63
 1613 02c4 01       		.byte	0x1
 1614 02c5 6302     		.2byte	0x263
 1615 02c7 00000000 		.4byte	.LFB12
 1616 02cb 80000000 		.4byte	.LFE12-.LFB12
 1617 02cf 01       		.uleb128 0x1
 1618 02d0 9C       		.byte	0x9c
 1619 02d1 F4020000 		.4byte	0x2f4
 1620 02d5 0A       		.uleb128 0xa
 1621 02d6 27030000 		.4byte	.LASF33
 1622 02da 01       		.byte	0x1
 1623 02db 6302     		.2byte	0x263
 1624 02dd 79000000 		.4byte	0x79
 1625 02e1 02       		.uleb128 0x2
 1626 02e2 91       		.byte	0x91
 1627 02e3 6F       		.sleb128 -17
 1628 02e4 0B       		.uleb128 0xb
 1629 02e5 1C000000 		.4byte	.LASF42
 1630 02e9 01       		.byte	0x1
 1631 02ea 6502     		.2byte	0x265
 1632 02ec B5000000 		.4byte	0xb5
 1633 02f0 02       		.uleb128 0x2
 1634 02f1 91       		.byte	0x91
 1635 02f2 74       		.sleb128 -12
 1636 02f3 00       		.byte	0
 1637 02f4 09       		.uleb128 0x9
 1638 02f5 BC030000 		.4byte	.LASF43
 1639 02f9 01       		.byte	0x1
 1640 02fa B402     		.2byte	0x2b4
 1641 02fc 00000000 		.4byte	.LFB13
 1642 0300 2C000000 		.4byte	.LFE13-.LFB13
 1643 0304 01       		.uleb128 0x1
 1644 0305 9C       		.byte	0x9c
 1645 0306 1A030000 		.4byte	0x31a
 1646 030a 0A       		.uleb128 0xa
 1647 030b E0020000 		.4byte	.LASF44
 1648 030f 01       		.byte	0x1
 1649 0310 B402     		.2byte	0x2b4
 1650 0312 A9000000 		.4byte	0xa9
 1651 0316 02       		.uleb128 0x2
 1652 0317 91       		.byte	0x91
 1653 0318 76       		.sleb128 -10
 1654 0319 00       		.byte	0
 1655 031a 09       		.uleb128 0x9
 1656 031b F9020000 		.4byte	.LASF45
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 45


 1657 031f 01       		.byte	0x1
 1658 0320 CF02     		.2byte	0x2cf
 1659 0322 00000000 		.4byte	.LFB14
 1660 0326 1C000000 		.4byte	.LFE14-.LFB14
 1661 032a 01       		.uleb128 0x1
 1662 032b 9C       		.byte	0x9c
 1663 032c 40030000 		.4byte	0x340
 1664 0330 0A       		.uleb128 0xa
 1665 0331 E0020000 		.4byte	.LASF44
 1666 0335 01       		.byte	0x1
 1667 0336 CF02     		.2byte	0x2cf
 1668 0338 B5000000 		.4byte	0xb5
 1669 033c 02       		.uleb128 0x2
 1670 033d 91       		.byte	0x91
 1671 033e 74       		.sleb128 -12
 1672 033f 00       		.byte	0
 1673 0340 10       		.uleb128 0x10
 1674 0341 BC020000 		.4byte	.LASF46
 1675 0345 01       		.byte	0x1
 1676 0346 E702     		.2byte	0x2e7
 1677 0348 A9000000 		.4byte	0xa9
 1678 034c 00000000 		.4byte	.LFB15
 1679 0350 8C000000 		.4byte	.LFE15-.LFB15
 1680 0354 01       		.uleb128 0x1
 1681 0355 9C       		.byte	0x9c
 1682 0356 88030000 		.4byte	0x388
 1683 035a 0A       		.uleb128 0xa
 1684 035b 6D030000 		.4byte	.LASF47
 1685 035f 01       		.byte	0x1
 1686 0360 E702     		.2byte	0x2e7
 1687 0362 A9000000 		.4byte	0xa9
 1688 0366 02       		.uleb128 0x2
 1689 0367 91       		.byte	0x91
 1690 0368 6E       		.sleb128 -18
 1691 0369 0B       		.uleb128 0xb
 1692 036a 31010000 		.4byte	.LASF48
 1693 036e 01       		.byte	0x1
 1694 036f E902     		.2byte	0x2e9
 1695 0371 A9000000 		.4byte	0xa9
 1696 0375 02       		.uleb128 0x2
 1697 0376 91       		.byte	0x91
 1698 0377 72       		.sleb128 -14
 1699 0378 0B       		.uleb128 0xb
 1700 0379 C6000000 		.4byte	.LASF49
 1701 037d 01       		.byte	0x1
 1702 037e EA02     		.2byte	0x2ea
 1703 0380 B5000000 		.4byte	0xb5
 1704 0384 02       		.uleb128 0x2
 1705 0385 91       		.byte	0x91
 1706 0386 74       		.sleb128 -12
 1707 0387 00       		.byte	0
 1708 0388 0E       		.uleb128 0xe
 1709 0389 7F010000 		.4byte	.LASF50
 1710 038d 01       		.byte	0x1
 1711 038e 1103     		.2byte	0x311
 1712 0390 B5000000 		.4byte	0xb5
 1713 0394 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 46


 1714 0398 94000000 		.4byte	.LFE16-.LFB16
 1715 039c 01       		.uleb128 0x1
 1716 039d 9C       		.byte	0x9c
 1717 039e D0030000 		.4byte	0x3d0
 1718 03a2 0A       		.uleb128 0xa
 1719 03a3 6D030000 		.4byte	.LASF47
 1720 03a7 01       		.byte	0x1
 1721 03a8 1103     		.2byte	0x311
 1722 03aa A9000000 		.4byte	0xa9
 1723 03ae 02       		.uleb128 0x2
 1724 03af 91       		.byte	0x91
 1725 03b0 5E       		.sleb128 -34
 1726 03b1 0B       		.uleb128 0xb
 1727 03b2 EB000000 		.4byte	.LASF51
 1728 03b6 01       		.byte	0x1
 1729 03b7 1403     		.2byte	0x314
 1730 03b9 DB000000 		.4byte	0xdb
 1731 03bd 02       		.uleb128 0x2
 1732 03be 91       		.byte	0x91
 1733 03bf 60       		.sleb128 -32
 1734 03c0 0B       		.uleb128 0xb
 1735 03c1 C6000000 		.4byte	.LASF49
 1736 03c5 01       		.byte	0x1
 1737 03c6 1503     		.2byte	0x315
 1738 03c8 B5000000 		.4byte	0xb5
 1739 03cc 02       		.uleb128 0x2
 1740 03cd 91       		.byte	0x91
 1741 03ce 6C       		.sleb128 -20
 1742 03cf 00       		.byte	0
 1743 03d0 0E       		.uleb128 0xe
 1744 03d1 37030000 		.4byte	.LASF52
 1745 03d5 01       		.byte	0x1
 1746 03d6 3D03     		.2byte	0x33d
 1747 03d8 C1000000 		.4byte	0xc1
 1748 03dc 00000000 		.4byte	.LFB17
 1749 03e0 84000000 		.4byte	.LFE17-.LFB17
 1750 03e4 01       		.uleb128 0x1
 1751 03e5 9C       		.byte	0x9c
 1752 03e6 18040000 		.4byte	0x418
 1753 03ea 0A       		.uleb128 0xa
 1754 03eb 6D030000 		.4byte	.LASF47
 1755 03ef 01       		.byte	0x1
 1756 03f0 3D03     		.2byte	0x33d
 1757 03f2 A9000000 		.4byte	0xa9
 1758 03f6 02       		.uleb128 0x2
 1759 03f7 91       		.byte	0x91
 1760 03f8 66       		.sleb128 -26
 1761 03f9 0B       		.uleb128 0xb
 1762 03fa 04010000 		.4byte	.LASF53
 1763 03fe 01       		.byte	0x1
 1764 03ff 3F03     		.2byte	0x33f
 1765 0401 C1000000 		.4byte	0xc1
 1766 0405 02       		.uleb128 0x2
 1767 0406 91       		.byte	0x91
 1768 0407 68       		.sleb128 -24
 1769 0408 0B       		.uleb128 0xb
 1770 0409 C6000000 		.4byte	.LASF49
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 47


 1771 040d 01       		.byte	0x1
 1772 040e 4003     		.2byte	0x340
 1773 0410 B5000000 		.4byte	0xb5
 1774 0414 02       		.uleb128 0x2
 1775 0415 91       		.byte	0x91
 1776 0416 6C       		.sleb128 -20
 1777 0417 00       		.byte	0
 1778 0418 13       		.uleb128 0x13
 1779 0419 91020000 		.4byte	.LASF54
 1780 041d 01       		.byte	0x1
 1781 041e 23       		.byte	0x23
 1782 041f 79000000 		.4byte	0x79
 1783 0423 05       		.uleb128 0x5
 1784 0424 03       		.byte	0x3
 1785 0425 00000000 		.4byte	ADC_SAR_1_initVar
 1786 0429 13       		.uleb128 0x13
 1787 042a 9B000000 		.4byte	.LASF55
 1788 042e 01       		.byte	0x1
 1789 042f 24       		.byte	0x24
 1790 0430 3A040000 		.4byte	0x43a
 1791 0434 05       		.uleb128 0x5
 1792 0435 03       		.byte	0x3
 1793 0436 00000000 		.4byte	ADC_SAR_1_offset
 1794 043a 05       		.uleb128 0x5
 1795 043b A9000000 		.4byte	0xa9
 1796 043f 13       		.uleb128 0x13
 1797 0440 3E010000 		.4byte	.LASF56
 1798 0444 01       		.byte	0x1
 1799 0445 25       		.byte	0x25
 1800 0446 3A040000 		.4byte	0x43a
 1801 044a 05       		.uleb128 0x5
 1802 044b 03       		.byte	0x3
 1803 044c 00000000 		.4byte	ADC_SAR_1_countsPerVolt
 1804 0450 13       		.uleb128 0x13
 1805 0451 D4030000 		.4byte	.LASF57
 1806 0455 01       		.byte	0x1
 1807 0456 26       		.byte	0x26
 1808 0457 61040000 		.4byte	0x461
 1809 045b 05       		.uleb128 0x5
 1810 045c 03       		.byte	0x3
 1811 045d 00000000 		.4byte	ADC_SAR_1_countsPer10Volt
 1812 0461 05       		.uleb128 0x5
 1813 0462 B5000000 		.4byte	0xb5
 1814 0466 13       		.uleb128 0x13
 1815 0467 0C040000 		.4byte	.LASF58
 1816 046b 01       		.byte	0x1
 1817 046c 27       		.byte	0x27
 1818 046d 3A040000 		.4byte	0x43a
 1819 0471 05       		.uleb128 0x5
 1820 0472 03       		.byte	0x3
 1821 0473 00000000 		.4byte	ADC_SAR_1_shift
 1822 0477 00       		.byte	0
 1823              		.section	.debug_abbrev,"",%progbits
 1824              	.Ldebug_abbrev0:
 1825 0000 01       		.uleb128 0x1
 1826 0001 11       		.uleb128 0x11
 1827 0002 01       		.byte	0x1
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 48


 1828 0003 25       		.uleb128 0x25
 1829 0004 0E       		.uleb128 0xe
 1830 0005 13       		.uleb128 0x13
 1831 0006 0B       		.uleb128 0xb
 1832 0007 03       		.uleb128 0x3
 1833 0008 0E       		.uleb128 0xe
 1834 0009 1B       		.uleb128 0x1b
 1835 000a 0E       		.uleb128 0xe
 1836 000b 55       		.uleb128 0x55
 1837 000c 17       		.uleb128 0x17
 1838 000d 11       		.uleb128 0x11
 1839 000e 01       		.uleb128 0x1
 1840 000f 10       		.uleb128 0x10
 1841 0010 17       		.uleb128 0x17
 1842 0011 00       		.byte	0
 1843 0012 00       		.byte	0
 1844 0013 02       		.uleb128 0x2
 1845 0014 24       		.uleb128 0x24
 1846 0015 00       		.byte	0
 1847 0016 0B       		.uleb128 0xb
 1848 0017 0B       		.uleb128 0xb
 1849 0018 3E       		.uleb128 0x3e
 1850 0019 0B       		.uleb128 0xb
 1851 001a 03       		.uleb128 0x3
 1852 001b 08       		.uleb128 0x8
 1853 001c 00       		.byte	0
 1854 001d 00       		.byte	0
 1855 001e 03       		.uleb128 0x3
 1856 001f 24       		.uleb128 0x24
 1857 0020 00       		.byte	0
 1858 0021 0B       		.uleb128 0xb
 1859 0022 0B       		.uleb128 0xb
 1860 0023 3E       		.uleb128 0x3e
 1861 0024 0B       		.uleb128 0xb
 1862 0025 03       		.uleb128 0x3
 1863 0026 0E       		.uleb128 0xe
 1864 0027 00       		.byte	0
 1865 0028 00       		.byte	0
 1866 0029 04       		.uleb128 0x4
 1867 002a 16       		.uleb128 0x16
 1868 002b 00       		.byte	0
 1869 002c 03       		.uleb128 0x3
 1870 002d 0E       		.uleb128 0xe
 1871 002e 3A       		.uleb128 0x3a
 1872 002f 0B       		.uleb128 0xb
 1873 0030 3B       		.uleb128 0x3b
 1874 0031 05       		.uleb128 0x5
 1875 0032 49       		.uleb128 0x49
 1876 0033 13       		.uleb128 0x13
 1877 0034 00       		.byte	0
 1878 0035 00       		.byte	0
 1879 0036 05       		.uleb128 0x5
 1880 0037 35       		.uleb128 0x35
 1881 0038 00       		.byte	0
 1882 0039 49       		.uleb128 0x49
 1883 003a 13       		.uleb128 0x13
 1884 003b 00       		.byte	0
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 49


 1885 003c 00       		.byte	0
 1886 003d 06       		.uleb128 0x6
 1887 003e 2E       		.uleb128 0x2e
 1888 003f 00       		.byte	0
 1889 0040 3F       		.uleb128 0x3f
 1890 0041 19       		.uleb128 0x19
 1891 0042 03       		.uleb128 0x3
 1892 0043 0E       		.uleb128 0xe
 1893 0044 3A       		.uleb128 0x3a
 1894 0045 0B       		.uleb128 0xb
 1895 0046 3B       		.uleb128 0x3b
 1896 0047 0B       		.uleb128 0xb
 1897 0048 27       		.uleb128 0x27
 1898 0049 19       		.uleb128 0x19
 1899 004a 11       		.uleb128 0x11
 1900 004b 01       		.uleb128 0x1
 1901 004c 12       		.uleb128 0x12
 1902 004d 06       		.uleb128 0x6
 1903 004e 40       		.uleb128 0x40
 1904 004f 18       		.uleb128 0x18
 1905 0050 9642     		.uleb128 0x2116
 1906 0052 19       		.uleb128 0x19
 1907 0053 00       		.byte	0
 1908 0054 00       		.byte	0
 1909 0055 07       		.uleb128 0x7
 1910 0056 2E       		.uleb128 0x2e
 1911 0057 01       		.byte	0x1
 1912 0058 3F       		.uleb128 0x3f
 1913 0059 19       		.uleb128 0x19
 1914 005a 03       		.uleb128 0x3
 1915 005b 0E       		.uleb128 0xe
 1916 005c 3A       		.uleb128 0x3a
 1917 005d 0B       		.uleb128 0xb
 1918 005e 3B       		.uleb128 0x3b
 1919 005f 0B       		.uleb128 0xb
 1920 0060 27       		.uleb128 0x27
 1921 0061 19       		.uleb128 0x19
 1922 0062 11       		.uleb128 0x11
 1923 0063 01       		.uleb128 0x1
 1924 0064 12       		.uleb128 0x12
 1925 0065 06       		.uleb128 0x6
 1926 0066 40       		.uleb128 0x40
 1927 0067 18       		.uleb128 0x18
 1928 0068 9642     		.uleb128 0x2116
 1929 006a 19       		.uleb128 0x19
 1930 006b 01       		.uleb128 0x1
 1931 006c 13       		.uleb128 0x13
 1932 006d 00       		.byte	0
 1933 006e 00       		.byte	0
 1934 006f 08       		.uleb128 0x8
 1935 0070 34       		.uleb128 0x34
 1936 0071 00       		.byte	0
 1937 0072 03       		.uleb128 0x3
 1938 0073 0E       		.uleb128 0xe
 1939 0074 3A       		.uleb128 0x3a
 1940 0075 0B       		.uleb128 0xb
 1941 0076 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 50


 1942 0077 0B       		.uleb128 0xb
 1943 0078 49       		.uleb128 0x49
 1944 0079 13       		.uleb128 0x13
 1945 007a 02       		.uleb128 0x2
 1946 007b 18       		.uleb128 0x18
 1947 007c 00       		.byte	0
 1948 007d 00       		.byte	0
 1949 007e 09       		.uleb128 0x9
 1950 007f 2E       		.uleb128 0x2e
 1951 0080 01       		.byte	0x1
 1952 0081 3F       		.uleb128 0x3f
 1953 0082 19       		.uleb128 0x19
 1954 0083 03       		.uleb128 0x3
 1955 0084 0E       		.uleb128 0xe
 1956 0085 3A       		.uleb128 0x3a
 1957 0086 0B       		.uleb128 0xb
 1958 0087 3B       		.uleb128 0x3b
 1959 0088 05       		.uleb128 0x5
 1960 0089 27       		.uleb128 0x27
 1961 008a 19       		.uleb128 0x19
 1962 008b 11       		.uleb128 0x11
 1963 008c 01       		.uleb128 0x1
 1964 008d 12       		.uleb128 0x12
 1965 008e 06       		.uleb128 0x6
 1966 008f 40       		.uleb128 0x40
 1967 0090 18       		.uleb128 0x18
 1968 0091 9742     		.uleb128 0x2117
 1969 0093 19       		.uleb128 0x19
 1970 0094 01       		.uleb128 0x1
 1971 0095 13       		.uleb128 0x13
 1972 0096 00       		.byte	0
 1973 0097 00       		.byte	0
 1974 0098 0A       		.uleb128 0xa
 1975 0099 05       		.uleb128 0x5
 1976 009a 00       		.byte	0
 1977 009b 03       		.uleb128 0x3
 1978 009c 0E       		.uleb128 0xe
 1979 009d 3A       		.uleb128 0x3a
 1980 009e 0B       		.uleb128 0xb
 1981 009f 3B       		.uleb128 0x3b
 1982 00a0 05       		.uleb128 0x5
 1983 00a1 49       		.uleb128 0x49
 1984 00a2 13       		.uleb128 0x13
 1985 00a3 02       		.uleb128 0x2
 1986 00a4 18       		.uleb128 0x18
 1987 00a5 00       		.byte	0
 1988 00a6 00       		.byte	0
 1989 00a7 0B       		.uleb128 0xb
 1990 00a8 34       		.uleb128 0x34
 1991 00a9 00       		.byte	0
 1992 00aa 03       		.uleb128 0x3
 1993 00ab 0E       		.uleb128 0xe
 1994 00ac 3A       		.uleb128 0x3a
 1995 00ad 0B       		.uleb128 0xb
 1996 00ae 3B       		.uleb128 0x3b
 1997 00af 05       		.uleb128 0x5
 1998 00b0 49       		.uleb128 0x49
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 51


 1999 00b1 13       		.uleb128 0x13
 2000 00b2 02       		.uleb128 0x2
 2001 00b3 18       		.uleb128 0x18
 2002 00b4 00       		.byte	0
 2003 00b5 00       		.byte	0
 2004 00b6 0C       		.uleb128 0xc
 2005 00b7 2E       		.uleb128 0x2e
 2006 00b8 01       		.byte	0x1
 2007 00b9 3F       		.uleb128 0x3f
 2008 00ba 19       		.uleb128 0x19
 2009 00bb 03       		.uleb128 0x3
 2010 00bc 0E       		.uleb128 0xe
 2011 00bd 3A       		.uleb128 0x3a
 2012 00be 0B       		.uleb128 0xb
 2013 00bf 3B       		.uleb128 0x3b
 2014 00c0 05       		.uleb128 0x5
 2015 00c1 27       		.uleb128 0x27
 2016 00c2 19       		.uleb128 0x19
 2017 00c3 11       		.uleb128 0x11
 2018 00c4 01       		.uleb128 0x1
 2019 00c5 12       		.uleb128 0x12
 2020 00c6 06       		.uleb128 0x6
 2021 00c7 40       		.uleb128 0x40
 2022 00c8 18       		.uleb128 0x18
 2023 00c9 9642     		.uleb128 0x2116
 2024 00cb 19       		.uleb128 0x19
 2025 00cc 01       		.uleb128 0x1
 2026 00cd 13       		.uleb128 0x13
 2027 00ce 00       		.byte	0
 2028 00cf 00       		.byte	0
 2029 00d0 0D       		.uleb128 0xd
 2030 00d1 2E       		.uleb128 0x2e
 2031 00d2 00       		.byte	0
 2032 00d3 3F       		.uleb128 0x3f
 2033 00d4 19       		.uleb128 0x19
 2034 00d5 03       		.uleb128 0x3
 2035 00d6 0E       		.uleb128 0xe
 2036 00d7 3A       		.uleb128 0x3a
 2037 00d8 0B       		.uleb128 0xb
 2038 00d9 3B       		.uleb128 0x3b
 2039 00da 05       		.uleb128 0x5
 2040 00db 27       		.uleb128 0x27
 2041 00dc 19       		.uleb128 0x19
 2042 00dd 11       		.uleb128 0x11
 2043 00de 01       		.uleb128 0x1
 2044 00df 12       		.uleb128 0x12
 2045 00e0 06       		.uleb128 0x6
 2046 00e1 40       		.uleb128 0x40
 2047 00e2 18       		.uleb128 0x18
 2048 00e3 9742     		.uleb128 0x2117
 2049 00e5 19       		.uleb128 0x19
 2050 00e6 00       		.byte	0
 2051 00e7 00       		.byte	0
 2052 00e8 0E       		.uleb128 0xe
 2053 00e9 2E       		.uleb128 0x2e
 2054 00ea 01       		.byte	0x1
 2055 00eb 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 52


 2056 00ec 19       		.uleb128 0x19
 2057 00ed 03       		.uleb128 0x3
 2058 00ee 0E       		.uleb128 0xe
 2059 00ef 3A       		.uleb128 0x3a
 2060 00f0 0B       		.uleb128 0xb
 2061 00f1 3B       		.uleb128 0x3b
 2062 00f2 05       		.uleb128 0x5
 2063 00f3 27       		.uleb128 0x27
 2064 00f4 19       		.uleb128 0x19
 2065 00f5 49       		.uleb128 0x49
 2066 00f6 13       		.uleb128 0x13
 2067 00f7 11       		.uleb128 0x11
 2068 00f8 01       		.uleb128 0x1
 2069 00f9 12       		.uleb128 0x12
 2070 00fa 06       		.uleb128 0x6
 2071 00fb 40       		.uleb128 0x40
 2072 00fc 18       		.uleb128 0x18
 2073 00fd 9642     		.uleb128 0x2116
 2074 00ff 19       		.uleb128 0x19
 2075 0100 01       		.uleb128 0x1
 2076 0101 13       		.uleb128 0x13
 2077 0102 00       		.byte	0
 2078 0103 00       		.byte	0
 2079 0104 0F       		.uleb128 0xf
 2080 0105 2E       		.uleb128 0x2e
 2081 0106 00       		.byte	0
 2082 0107 3F       		.uleb128 0x3f
 2083 0108 19       		.uleb128 0x19
 2084 0109 03       		.uleb128 0x3
 2085 010a 0E       		.uleb128 0xe
 2086 010b 3A       		.uleb128 0x3a
 2087 010c 0B       		.uleb128 0xb
 2088 010d 3B       		.uleb128 0x3b
 2089 010e 05       		.uleb128 0x5
 2090 010f 27       		.uleb128 0x27
 2091 0110 19       		.uleb128 0x19
 2092 0111 49       		.uleb128 0x49
 2093 0112 13       		.uleb128 0x13
 2094 0113 11       		.uleb128 0x11
 2095 0114 01       		.uleb128 0x1
 2096 0115 12       		.uleb128 0x12
 2097 0116 06       		.uleb128 0x6
 2098 0117 40       		.uleb128 0x40
 2099 0118 18       		.uleb128 0x18
 2100 0119 9742     		.uleb128 0x2117
 2101 011b 19       		.uleb128 0x19
 2102 011c 00       		.byte	0
 2103 011d 00       		.byte	0
 2104 011e 10       		.uleb128 0x10
 2105 011f 2E       		.uleb128 0x2e
 2106 0120 01       		.byte	0x1
 2107 0121 3F       		.uleb128 0x3f
 2108 0122 19       		.uleb128 0x19
 2109 0123 03       		.uleb128 0x3
 2110 0124 0E       		.uleb128 0xe
 2111 0125 3A       		.uleb128 0x3a
 2112 0126 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 53


 2113 0127 3B       		.uleb128 0x3b
 2114 0128 05       		.uleb128 0x5
 2115 0129 27       		.uleb128 0x27
 2116 012a 19       		.uleb128 0x19
 2117 012b 49       		.uleb128 0x49
 2118 012c 13       		.uleb128 0x13
 2119 012d 11       		.uleb128 0x11
 2120 012e 01       		.uleb128 0x1
 2121 012f 12       		.uleb128 0x12
 2122 0130 06       		.uleb128 0x6
 2123 0131 40       		.uleb128 0x40
 2124 0132 18       		.uleb128 0x18
 2125 0133 9742     		.uleb128 0x2117
 2126 0135 19       		.uleb128 0x19
 2127 0136 01       		.uleb128 0x1
 2128 0137 13       		.uleb128 0x13
 2129 0138 00       		.byte	0
 2130 0139 00       		.byte	0
 2131 013a 11       		.uleb128 0x11
 2132 013b 34       		.uleb128 0x34
 2133 013c 00       		.byte	0
 2134 013d 03       		.uleb128 0x3
 2135 013e 08       		.uleb128 0x8
 2136 013f 3A       		.uleb128 0x3a
 2137 0140 0B       		.uleb128 0xb
 2138 0141 3B       		.uleb128 0x3b
 2139 0142 05       		.uleb128 0x5
 2140 0143 49       		.uleb128 0x49
 2141 0144 13       		.uleb128 0x13
 2142 0145 02       		.uleb128 0x2
 2143 0146 18       		.uleb128 0x18
 2144 0147 00       		.byte	0
 2145 0148 00       		.byte	0
 2146 0149 12       		.uleb128 0x12
 2147 014a 2E       		.uleb128 0x2e
 2148 014b 01       		.byte	0x1
 2149 014c 03       		.uleb128 0x3
 2150 014d 0E       		.uleb128 0xe
 2151 014e 3A       		.uleb128 0x3a
 2152 014f 0B       		.uleb128 0xb
 2153 0150 3B       		.uleb128 0x3b
 2154 0151 05       		.uleb128 0x5
 2155 0152 27       		.uleb128 0x27
 2156 0153 19       		.uleb128 0x19
 2157 0154 11       		.uleb128 0x11
 2158 0155 01       		.uleb128 0x1
 2159 0156 12       		.uleb128 0x12
 2160 0157 06       		.uleb128 0x6
 2161 0158 40       		.uleb128 0x40
 2162 0159 18       		.uleb128 0x18
 2163 015a 9642     		.uleb128 0x2116
 2164 015c 19       		.uleb128 0x19
 2165 015d 01       		.uleb128 0x1
 2166 015e 13       		.uleb128 0x13
 2167 015f 00       		.byte	0
 2168 0160 00       		.byte	0
 2169 0161 13       		.uleb128 0x13
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 54


 2170 0162 34       		.uleb128 0x34
 2171 0163 00       		.byte	0
 2172 0164 03       		.uleb128 0x3
 2173 0165 0E       		.uleb128 0xe
 2174 0166 3A       		.uleb128 0x3a
 2175 0167 0B       		.uleb128 0xb
 2176 0168 3B       		.uleb128 0x3b
 2177 0169 0B       		.uleb128 0xb
 2178 016a 49       		.uleb128 0x49
 2179 016b 13       		.uleb128 0x13
 2180 016c 3F       		.uleb128 0x3f
 2181 016d 19       		.uleb128 0x19
 2182 016e 02       		.uleb128 0x2
 2183 016f 18       		.uleb128 0x18
 2184 0170 00       		.byte	0
 2185 0171 00       		.byte	0
 2186 0172 00       		.byte	0
 2187              		.section	.debug_aranges,"",%progbits
 2188 0000 A4000000 		.4byte	0xa4
 2189 0004 0200     		.2byte	0x2
 2190 0006 00000000 		.4byte	.Ldebug_info0
 2191 000a 04       		.byte	0x4
 2192 000b 00       		.byte	0
 2193 000c 0000     		.2byte	0
 2194 000e 0000     		.2byte	0
 2195 0010 00000000 		.4byte	.LFB0
 2196 0014 20000000 		.4byte	.LFE0-.LFB0
 2197 0018 00000000 		.4byte	.LFB1
 2198 001c 44000000 		.4byte	.LFE1-.LFB1
 2199 0020 00000000 		.4byte	.LFB2
 2200 0024 F4000000 		.4byte	.LFE2-.LFB2
 2201 0028 00000000 		.4byte	.LFB3
 2202 002c 80000000 		.4byte	.LFE3-.LFB3
 2203 0030 00000000 		.4byte	.LFB4
 2204 0034 40000000 		.4byte	.LFE4-.LFB4
 2205 0038 00000000 		.4byte	.LFB5
 2206 003c 50000000 		.4byte	.LFE5-.LFB5
 2207 0040 00000000 		.4byte	.LFB6
 2208 0044 20000000 		.4byte	.LFE6-.LFB6
 2209 0048 00000000 		.4byte	.LFB7
 2210 004c 20000000 		.4byte	.LFE7-.LFB7
 2211 0050 00000000 		.4byte	.LFB8
 2212 0054 40000000 		.4byte	.LFE8-.LFB8
 2213 0058 00000000 		.4byte	.LFB9
 2214 005c 2C000000 		.4byte	.LFE9-.LFB9
 2215 0060 00000000 		.4byte	.LFB10
 2216 0064 34000000 		.4byte	.LFE10-.LFB10
 2217 0068 00000000 		.4byte	.LFB11
 2218 006c 20000000 		.4byte	.LFE11-.LFB11
 2219 0070 00000000 		.4byte	.LFB12
 2220 0074 80000000 		.4byte	.LFE12-.LFB12
 2221 0078 00000000 		.4byte	.LFB13
 2222 007c 2C000000 		.4byte	.LFE13-.LFB13
 2223 0080 00000000 		.4byte	.LFB14
 2224 0084 1C000000 		.4byte	.LFE14-.LFB14
 2225 0088 00000000 		.4byte	.LFB15
 2226 008c 8C000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 55


 2227 0090 00000000 		.4byte	.LFB16
 2228 0094 94000000 		.4byte	.LFE16-.LFB16
 2229 0098 00000000 		.4byte	.LFB17
 2230 009c 84000000 		.4byte	.LFE17-.LFB17
 2231 00a0 00000000 		.4byte	0
 2232 00a4 00000000 		.4byte	0
 2233              		.section	.debug_ranges,"",%progbits
 2234              	.Ldebug_ranges0:
 2235 0000 00000000 		.4byte	.LFB0
 2236 0004 20000000 		.4byte	.LFE0
 2237 0008 00000000 		.4byte	.LFB1
 2238 000c 44000000 		.4byte	.LFE1
 2239 0010 00000000 		.4byte	.LFB2
 2240 0014 F4000000 		.4byte	.LFE2
 2241 0018 00000000 		.4byte	.LFB3
 2242 001c 80000000 		.4byte	.LFE3
 2243 0020 00000000 		.4byte	.LFB4
 2244 0024 40000000 		.4byte	.LFE4
 2245 0028 00000000 		.4byte	.LFB5
 2246 002c 50000000 		.4byte	.LFE5
 2247 0030 00000000 		.4byte	.LFB6
 2248 0034 20000000 		.4byte	.LFE6
 2249 0038 00000000 		.4byte	.LFB7
 2250 003c 20000000 		.4byte	.LFE7
 2251 0040 00000000 		.4byte	.LFB8
 2252 0044 40000000 		.4byte	.LFE8
 2253 0048 00000000 		.4byte	.LFB9
 2254 004c 2C000000 		.4byte	.LFE9
 2255 0050 00000000 		.4byte	.LFB10
 2256 0054 34000000 		.4byte	.LFE10
 2257 0058 00000000 		.4byte	.LFB11
 2258 005c 20000000 		.4byte	.LFE11
 2259 0060 00000000 		.4byte	.LFB12
 2260 0064 80000000 		.4byte	.LFE12
 2261 0068 00000000 		.4byte	.LFB13
 2262 006c 2C000000 		.4byte	.LFE13
 2263 0070 00000000 		.4byte	.LFB14
 2264 0074 1C000000 		.4byte	.LFE14
 2265 0078 00000000 		.4byte	.LFB15
 2266 007c 8C000000 		.4byte	.LFE15
 2267 0080 00000000 		.4byte	.LFB16
 2268 0084 94000000 		.4byte	.LFE16
 2269 0088 00000000 		.4byte	.LFB17
 2270 008c 84000000 		.4byte	.LFE17
 2271 0090 00000000 		.4byte	0
 2272 0094 00000000 		.4byte	0
 2273              		.section	.debug_line,"",%progbits
 2274              	.Ldebug_line0:
 2275 0000 0B020000 		.section	.debug_str,"MS",%progbits,1
 2275      02004800 
 2275      00000201 
 2275      FB0E0D00 
 2275      01010101 
 2276              	.LASF12:
 2277 0000 75696E74 		.ascii	"uint16\000"
 2277      313600
 2278              	.LASF62:
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 56


 2279 0007 4144435F 		.ascii	"ADC_SAR_1_GetResult8\000"
 2279      5341525F 
 2279      315F4765 
 2279      74526573 
 2279      756C7438 
 2280              	.LASF42:
 2281 001c 636F756E 		.ascii	"counts\000"
 2281      747300
 2282              	.LASF63:
 2283 0023 4144435F 		.ascii	"ADC_SAR_1_CalcGain\000"
 2283      5341525F 
 2283      315F4361 
 2283      6C634761 
 2283      696E00
 2284              	.LASF60:
 2285 0036 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_SAR_1.c\000"
 2285      6E657261 
 2285      7465645F 
 2285      536F7572 
 2285      63655C50 
 2286              	.LASF8:
 2287 005b 6C6F6E67 		.ascii	"long long unsigned int\000"
 2287      206C6F6E 
 2287      6720756E 
 2287      7369676E 
 2287      65642069 
 2288              	.LASF7:
 2289 0072 6C6F6E67 		.ascii	"long long int\000"
 2289      206C6F6E 
 2289      6720696E 
 2289      7400
 2290              	.LASF1:
 2291 0080 7369676E 		.ascii	"signed char\000"
 2291      65642063 
 2291      68617200 
 2292              	.LASF16:
 2293 008c 696E7433 		.ascii	"int32\000"
 2293      3200
 2294              	.LASF5:
 2295 0092 6C6F6E67 		.ascii	"long int\000"
 2295      20696E74 
 2295      00
 2296              	.LASF55:
 2297 009b 4144435F 		.ascii	"ADC_SAR_1_offset\000"
 2297      5341525F 
 2297      315F6F66 
 2297      66736574 
 2297      00
 2298              	.LASF22:
 2299 00ac 72656731 		.ascii	"reg16\000"
 2299      3600
 2300              	.LASF11:
 2301 00b2 75696E74 		.ascii	"uint8\000"
 2301      3800
 2302              	.LASF19:
 2303 00b8 646F7562 		.ascii	"double\000"
 2303      6C6500
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 57


 2304              	.LASF13:
 2305 00bf 75696E74 		.ascii	"uint32\000"
 2305      333200
 2306              	.LASF49:
 2307 00c6 636F756E 		.ascii	"countsPer10Volt\000"
 2307      74735065 
 2307      72313056 
 2307      6F6C7400 
 2308              	.LASF36:
 2309 00d6 7265744D 		.ascii	"retMode\000"
 2309      6F646500 
 2310              	.LASF0:
 2311 00de 756E7369 		.ascii	"unsigned int\000"
 2311      676E6564 
 2311      20696E74 
 2311      00
 2312              	.LASF51:
 2313 00eb 75566F6C 		.ascii	"uVolts\000"
 2313      747300
 2314              	.LASF6:
 2315 00f2 6C6F6E67 		.ascii	"long unsigned int\000"
 2315      20756E73 
 2315      69676E65 
 2315      6420696E 
 2315      7400
 2316              	.LASF53:
 2317 0104 766F6C74 		.ascii	"volts\000"
 2317      7300
 2318              	.LASF4:
 2319 010a 73686F72 		.ascii	"short unsigned int\000"
 2319      7420756E 
 2319      7369676E 
 2319      65642069 
 2319      6E7400
 2320              	.LASF25:
 2321 011d 4144435F 		.ascii	"ADC_SAR_1_Init\000"
 2321      5341525F 
 2321      315F496E 
 2321      697400
 2322              	.LASF14:
 2323 012c 696E7438 		.ascii	"int8\000"
 2323      00
 2324              	.LASF48:
 2325 0131 6D566F6C 		.ascii	"mVolts\000"
 2325      747300
 2326              	.LASF23:
 2327 0138 72656733 		.ascii	"reg32\000"
 2327      3200
 2328              	.LASF56:
 2329 013e 4144435F 		.ascii	"ADC_SAR_1_countsPerVolt\000"
 2329      5341525F 
 2329      315F636F 
 2329      756E7473 
 2329      50657256 
 2330              	.LASF17:
 2331 0156 666C6F61 		.ascii	"float32\000"
 2331      74333200 
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 58


 2332              	.LASF9:
 2333 015e 73697A65 		.ascii	"sizetype\000"
 2333      74797065 
 2333      00
 2334              	.LASF31:
 2335 0167 4144435F 		.ascii	"ADC_SAR_1_SetResolution\000"
 2335      5341525F 
 2335      315F5365 
 2335      74526573 
 2335      6F6C7574 
 2336              	.LASF50:
 2337 017f 4144435F 		.ascii	"ADC_SAR_1_CountsTo_uVolts\000"
 2337      5341525F 
 2337      315F436F 
 2337      756E7473 
 2337      546F5F75 
 2338              	.LASF61:
 2339 0199 453A5C44 		.ascii	"E:\\Documents\\PSoC Creator\\engr478labs\\Lab2_Soft"
 2339      6F63756D 
 2339      656E7473 
 2339      5C50536F 
 2339      43204372 
 2340 01c8 77617265 		.ascii	"ware.cydsn\000"
 2340      2E637964 
 2340      736E00
 2341              	.LASF59:
 2342 01d3 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2342      4320342E 
 2342      392E3320 
 2342      32303135 
 2342      30333033 
 2343 0206 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2343      20726576 
 2343      6973696F 
 2343      6E203232 
 2343      31323230 
 2344 0239 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2344      66756E63 
 2344      74696F6E 
 2344      2D736563 
 2344      74696F6E 
 2345              	.LASF24:
 2346 0261 4144435F 		.ascii	"ADC_SAR_1_Start\000"
 2346      5341525F 
 2346      315F5374 
 2346      61727400 
 2347              	.LASF20:
 2348 0271 696E7436 		.ascii	"int64\000"
 2348      3400
 2349              	.LASF40:
 2350 0277 4144435F 		.ascii	"ADC_SAR_1_SetOffset\000"
 2350      5341525F 
 2350      315F5365 
 2350      744F6666 
 2350      73657400 
 2351              	.LASF18:
 2352 028b 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 59


 2352      7400
 2353              	.LASF54:
 2354 0291 4144435F 		.ascii	"ADC_SAR_1_initVar\000"
 2354      5341525F 
 2354      315F696E 
 2354      69745661 
 2354      7200
 2355              	.LASF32:
 2356 02a3 706F7765 		.ascii	"power\000"
 2356      7200
 2357              	.LASF21:
 2358 02a9 72656738 		.ascii	"reg8\000"
 2358      00
 2359              	.LASF2:
 2360 02ae 756E7369 		.ascii	"unsigned char\000"
 2360      676E6564 
 2360      20636861 
 2360      7200
 2361              	.LASF46:
 2362 02bc 4144435F 		.ascii	"ADC_SAR_1_CountsTo_mVolts\000"
 2362      5341525F 
 2362      315F436F 
 2362      756E7473 
 2362      546F5F6D 
 2363              	.LASF3:
 2364 02d6 73686F72 		.ascii	"short int\000"
 2364      7420696E 
 2364      7400
 2365              	.LASF44:
 2366 02e0 61646347 		.ascii	"adcGain\000"
 2366      61696E00 
 2367              	.LASF28:
 2368 02e8 4144435F 		.ascii	"ADC_SAR_1_Enable\000"
 2368      5341525F 
 2368      315F456E 
 2368      61626C65 
 2368      00
 2369              	.LASF45:
 2370 02f9 4144435F 		.ascii	"ADC_SAR_1_SetScaledGain\000"
 2370      5341525F 
 2370      315F5365 
 2370      74536361 
 2370      6C656447 
 2371              	.LASF39:
 2372 0311 4144435F 		.ascii	"ADC_SAR_1_GetResult16\000"
 2372      5341525F 
 2372      315F4765 
 2372      74526573 
 2372      756C7431 
 2373              	.LASF33:
 2374 0327 7265736F 		.ascii	"resolution\000"
 2374      6C757469 
 2374      6F6E00
 2375              	.LASF10:
 2376 0332 63686172 		.ascii	"char\000"
 2376      00
 2377              	.LASF52:
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 60


 2378 0337 4144435F 		.ascii	"ADC_SAR_1_CountsTo_Volts\000"
 2378      5341525F 
 2378      315F436F 
 2378      756E7473 
 2378      546F5F56 
 2379              	.LASF41:
 2380 0350 6F666673 		.ascii	"offset\000"
 2380      657400
 2381              	.LASF35:
 2382 0357 4144435F 		.ascii	"ADC_SAR_1_StopConvert\000"
 2382      5341525F 
 2382      315F5374 
 2382      6F70436F 
 2382      6E766572 
 2383              	.LASF47:
 2384 036d 61646343 		.ascii	"adcCounts\000"
 2384      6F756E74 
 2384      7300
 2385              	.LASF27:
 2386 0377 656E6162 		.ascii	"enableInterrupts\000"
 2386      6C65496E 
 2386      74657272 
 2386      75707473 
 2386      00
 2387              	.LASF37:
 2388 0388 73746174 		.ascii	"status\000"
 2388      757300
 2389              	.LASF38:
 2390 038f 4144435F 		.ascii	"ADC_SAR_1_IsEndConversion\000"
 2390      5341525F 
 2390      315F4973 
 2390      456E6443 
 2390      6F6E7665 
 2391              	.LASF30:
 2392 03a9 4144435F 		.ascii	"ADC_SAR_1_SetPower\000"
 2392      5341525F 
 2392      315F5365 
 2392      74506F77 
 2392      657200
 2393              	.LASF43:
 2394 03bc 4144435F 		.ascii	"ADC_SAR_1_SetGain\000"
 2394      5341525F 
 2394      315F5365 
 2394      74476169 
 2394      6E00
 2395              	.LASF15:
 2396 03ce 696E7431 		.ascii	"int16\000"
 2396      3600
 2397              	.LASF57:
 2398 03d4 4144435F 		.ascii	"ADC_SAR_1_countsPer10Volt\000"
 2398      5341525F 
 2398      315F636F 
 2398      756E7473 
 2398      50657231 
 2399              	.LASF34:
 2400 03ee 4144435F 		.ascii	"ADC_SAR_1_StartConvert\000"
 2400      5341525F 
ARM GAS  C:\Users\Jonah\AppData\Local\Temp\cc8pRWP0.s 			page 61


 2400      315F5374 
 2400      61727443 
 2400      6F6E7665 
 2401              	.LASF26:
 2402 0405 746D7052 		.ascii	"tmpReg\000"
 2402      656700
 2403              	.LASF58:
 2404 040c 4144435F 		.ascii	"ADC_SAR_1_shift\000"
 2404      5341525F 
 2404      315F7368 
 2404      69667400 
 2405              	.LASF29:
 2406 041c 4144435F 		.ascii	"ADC_SAR_1_Stop\000"
 2406      5341525F 
 2406      315F5374 
 2406      6F7000
 2407              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
